{"ast":null,"code":"var validations = {\n  email: {\n    required: \"Email is required.\",\n    pattern: {\n      value: /\\S+@\\S+\\.\\S+/,\n      message: \"Email is invalid.\"\n    }\n  },\n  name: {\n    required: \"Name is required.\",\n    maxLength: {\n      value: 50,\n      message: \"Name must not exceed 50 characters.\"\n    }\n  },\n  phoneNumber: {\n    required: \"Phone number is required.\",\n    pattern: {\n      value: /^\\d+$/,\n      message: \"Phone number must contain only numbers.\"\n    },\n    minLength: {\n      value: 10,\n      message: \"Phone number must be at least 10 digits.\"\n    },\n    maxLength: {\n      value: 15,\n      message: \"Phone number must not exceed 15 digits.\"\n    }\n  },\n  password: {\n    required: \"Password is required.\",\n    minLength: {\n      value: 8,\n      message: \"Password must be at least 8 characters.\"\n    },\n    pattern: {\n      value: /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$/,\n      message: \"Password must include at least one letter, one number, and one symbolic character.\"\n    }\n  },\n  repeatPassword: {\n    required: \"Password is required.\",\n    value: isNot\n  }\n};\nexport default validations;","map":{"version":3,"names":["validations","email","required","pattern","value","message","name","maxLength","phoneNumber","minLength","password","repeatPassword","isNot"],"sources":["C:/abilisense/project3/autisem-translator/client/components/shared/validations.js"],"sourcesContent":["const validations = {\r\n  email: {\r\n    required: \"Email is required.\",\r\n    pattern: {\r\n      value: /\\S+@\\S+\\.\\S+/,\r\n      message: \"Email is invalid.\",\r\n    },\r\n  },\r\n  name: {\r\n    required: \"Name is required.\",\r\n    maxLength: {\r\n      value: 50,\r\n      message: \"Name must not exceed 50 characters.\",\r\n    },\r\n  },\r\n  phoneNumber: {\r\n    required: \"Phone number is required.\",\r\n    pattern: {\r\n      value: /^\\d+$/,\r\n      message: \"Phone number must contain only numbers.\",\r\n    },\r\n    minLength: {\r\n      value: 10,\r\n      message: \"Phone number must be at least 10 digits.\",\r\n    },\r\n    maxLength: {\r\n      value: 15,\r\n      message: \"Phone number must not exceed 15 digits.\",\r\n    },\r\n  },\r\n  password: {\r\n    required: \"Password is required.\",\r\n    minLength: {\r\n      value: 8,\r\n      message: \"Password must be at least 8 characters.\",\r\n    },\r\n    pattern: {\r\n      value: /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$/,\r\n      message:\r\n        \"Password must include at least one letter, one number, and one symbolic character.\",\r\n    },\r\n  },\r\n\r\n  repeatPassword: {\r\n    required: \"Password is required.\",\r\n    value: isNot\r\n    // matchNewPassword: (value, state) => ({\r\n    //   isValid: value === state.repeatPassword,\r\n    //   errorMessage: 'Passwords do not match!',\r\n    // }),\r\n  },\r\n\r\n\r\n };\r\n\r\nexport default validations;\r\n"],"mappings":"AAAA,IAAMA,WAAW,GAAG;EAClBC,KAAK,EAAE;IACLC,QAAQ,EAAE,oBAAoB;IAC9BC,OAAO,EAAE;MACPC,KAAK,EAAE,cAAc;MACrBC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,IAAI,EAAE;IACJJ,QAAQ,EAAE,mBAAmB;IAC7BK,SAAS,EAAE;MACTH,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX;EACF,CAAC;EACDG,WAAW,EAAE;IACXN,QAAQ,EAAE,2BAA2B;IACrCC,OAAO,EAAE;MACPC,KAAK,EAAE,OAAO;MACdC,OAAO,EAAE;IACX,CAAC;IACDI,SAAS,EAAE;MACTL,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;IACDE,SAAS,EAAE;MACTH,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX;EACF,CAAC;EACDK,QAAQ,EAAE;IACRR,QAAQ,EAAE,uBAAuB;IACjCO,SAAS,EAAE;MACTL,KAAK,EAAE,CAAC;MACRC,OAAO,EAAE;IACX,CAAC;IACDF,OAAO,EAAE;MACPC,KAAK,EAAE,2DAA2D;MAClEC,OAAO,EACL;IACJ;EACF,CAAC;EAEDM,cAAc,EAAE;IACdT,QAAQ,EAAE,uBAAuB;IACjCE,KAAK,EAAEQ;EAKT;AAGD,CAAC;AAEF,eAAeZ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}