{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { openComposer } from 'react-native-email-link';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar SendEmail = function SendEmail() {\n  var to = ['recipient@example.com'];\n  var subject = 'Password Reset';\n  var body = 'Please reset my password.';\n  var handleEmailPress = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (Platform.OS === 'ios') {\n        try {\n          yield openComposer({\n            to: to,\n            subject: subject,\n            body: body\n          });\n        } catch (error) {\n          console.error('Error opening email client:', error);\n        }\n      } else {\n        var mailtoLink = `mailto:${to.join(',')}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;\n        try {\n          yield Linking.openURL(mailtoLink);\n        } catch (error) {\n          console.error('Error opening mailto link:', error);\n        }\n      }\n    });\n    return function handleEmailPress() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    children: _jsx(TouchableOpacity, {\n      onPress: handleEmailPress,\n      children: _jsx(Text, {\n        children: \"Send Email\"\n      })\n    })\n  });\n};\nexport default SendEmail;","map":{"version":3,"names":["React","View","TouchableOpacity","Text","Platform","Linking","openComposer","jsx","_jsx","SendEmail","to","subject","body","handleEmailPress","_ref","_asyncToGenerator","OS","error","console","mailtoLink","join","encodeURIComponent","openURL","apply","arguments","children","onPress"],"sources":["C:/abilisense/project3/autisem-translator/client/components/login/sendEmailComp.js"],"sourcesContent":["import React from 'react';\r\nimport { View, TouchableOpacity, Text, Platform, Linking } from 'react-native';\r\nimport { openComposer } from 'react-native-email-link';\r\n\r\nconst SendEmail = () => {\r\n  const to = ['recipient@example.com']; // Replace with your email address\r\n  const subject = 'Password Reset'; // Customize the subject\r\n  const body = 'Please reset my password.'; // Customize the body\r\n\r\n  const handleEmailPress = async () => {\r\n    if (Platform.OS === 'ios') {\r\n      // Use react-native-email-link on iOS\r\n      try {\r\n        await openComposer({\r\n          to,\r\n          subject,\r\n          body,\r\n        });\r\n      } catch (error) {\r\n        console.error('Error opening email client:', error);\r\n      }\r\n    } else {\r\n      // Fallback for non-iOS platforms\r\n      const mailtoLink = `mailto:${to.join(',')}?subject=${encodeURIComponent(\r\n        subject\r\n      )}&body=${encodeURIComponent(body)}`;\r\n\r\n      try {\r\n        await Linking.openURL(mailtoLink);\r\n      } catch (error) {\r\n        console.error('Error opening mailto link:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TouchableOpacity onPress={handleEmailPress}>\r\n        <Text>Send Email</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SendEmail;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,OAAA;AAE1B,SAASC,YAAY,QAAQ,yBAAyB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEvD,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EACtB,IAAMC,EAAE,GAAG,CAAC,uBAAuB,CAAC;EACpC,IAAMC,OAAO,GAAG,gBAAgB;EAChC,IAAMC,IAAI,GAAG,2BAA2B;EAExC,IAAMC,gBAAgB;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MACnC,IAAIX,QAAQ,CAACY,EAAE,KAAK,KAAK,EAAE;QAEzB,IAAI;UACF,MAAMV,YAAY,CAAC;YACjBI,EAAE,EAAFA,EAAE;YACFC,OAAO,EAAPA,OAAO;YACPC,IAAI,EAAJA;UACF,CAAC,CAAC;QACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACrD;MACF,CAAC,MAAM;QAEL,IAAME,UAAU,GAAI,UAAST,EAAE,CAACU,IAAI,CAAC,GAAG,CAAE,YAAWC,kBAAkB,CACrEV,OACF,CAAE,SAAQU,kBAAkB,CAACT,IAAI,CAAE,EAAC;QAEpC,IAAI;UACF,MAAMP,OAAO,CAACiB,OAAO,CAACH,UAAU,CAAC;QACnC,CAAC,CAAC,OAAOF,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QACpD;MACF;IACF,CAAC;IAAA,gBAxBKJ,gBAAgBA,CAAA;MAAA,OAAAC,IAAA,CAAAS,KAAA,OAAAC,SAAA;IAAA;EAAA,GAwBrB;EAED,OACEhB,IAAA,CAACP,IAAI;IAAAwB,QAAA,EACHjB,IAAA,CAACN,gBAAgB;MAACwB,OAAO,EAAEb,gBAAiB;MAAAY,QAAA,EAC1CjB,IAAA,CAACL,IAAI;QAAAsB,QAAA,EAAC;MAAU,CAAM;IAAC,CACP;EAAC,CACf,CAAC;AAEX,CAAC;AAED,eAAehB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}