{"ast":null,"code":"import View from \"../../Components/View/View\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Text from \"../../Text/Text\";\nimport useColorScheme from \"../../Utilities/useColorScheme\";\nimport Colors from \"./Colors\";\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar HermesBadge = function HermesBadge() {\n  var _global$HermesInterna, _global$HermesInterna2;\n  var isDarkMode = useColorScheme() === 'dark';\n  var version = (_global$HermesInterna = (_global$HermesInterna2 = global.HermesInternal) == null ? void 0 : _global$HermesInterna2.getRuntimeProperties == null ? void 0 : _global$HermesInterna2.getRuntimeProperties()['OSS Release Version']) != null ? _global$HermesInterna : '';\n  return global.HermesInternal ? _jsx(View, {\n    style: styles.badge,\n    children: _jsx(Text, {\n      style: [styles.badgeText, {\n        color: isDarkMode ? Colors.light : Colors.dark\n      }],\n      children: `Engine: Hermes ${version}`\n    })\n  }) : null;\n};\nvar styles = StyleSheet.create({\n  badge: {\n    position: 'absolute',\n    top: 8,\n    right: 12\n  },\n  badgeText: {\n    fontSize: 14,\n    fontWeight: '600',\n    textAlign: 'right'\n  }\n});\nexport default HermesBadge;","map":{"version":3,"names":["View","StyleSheet","Text","useColorScheme","Colors","React","jsx","_jsx","HermesBadge","_global$HermesInterna","_global$HermesInterna2","isDarkMode","version","global","HermesInternal","getRuntimeProperties","style","styles","badge","children","badgeText","color","light","dark","create","position","top","right","fontSize","fontWeight","textAlign"],"sources":["C:/abilisense/project3/autisem-translator/client/node_modules/react-native/Libraries/NewAppScreen/components/HermesBadge.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {Node} from 'react';\n\nimport View from '../../Components/View/View';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport useColorScheme from '../../Utilities/useColorScheme';\nimport Colors from './Colors';\nimport React from 'react';\n\nconst HermesBadge = (): Node => {\n  const isDarkMode = useColorScheme() === 'dark';\n  const version =\n    global.HermesInternal?.getRuntimeProperties?.()['OSS Release Version'] ??\n    '';\n  return global.HermesInternal ? (\n    <View style={styles.badge}>\n      <Text\n        style={[\n          styles.badgeText,\n          {\n            color: isDarkMode ? Colors.light : Colors.dark,\n          },\n        ]}>\n        {`Engine: Hermes ${version}`}\n      </Text>\n    </View>\n  ) : null;\n};\n\nconst styles = StyleSheet.create({\n  badge: {\n    position: 'absolute',\n    top: 8,\n    right: 12,\n  },\n  badgeText: {\n    fontSize: 14,\n    fontWeight: '600',\n    textAlign: 'right',\n  },\n});\n\nexport default HermesBadge;\n"],"mappings":"AAYA,OAAOA,IAAI;AACX,OAAOC,UAAU;AACjB,OAAOC,IAAI;AACX,OAAOC,cAAc;AACrB,OAAOC,MAAM;AACb,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE1B,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAe;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EAC9B,IAAMC,UAAU,GAAGR,cAAc,CAAC,CAAC,KAAK,MAAM;EAC9C,IAAMS,OAAO,IAAAH,qBAAA,IAAAC,sBAAA,GACXG,MAAM,CAACC,cAAc,qBAArBJ,sBAAA,CAAuBK,oBAAoB,oBAA3CL,sBAAA,CAAuBK,oBAAoB,CAAG,CAAC,CAAC,qBAAqB,CAAC,YAAAN,qBAAA,GACtE,EAAE;EACJ,OAAOI,MAAM,CAACC,cAAc,GAC1BP,IAAA,CAACP,IAAI;IAACgB,KAAK,EAAEC,MAAM,CAACC,KAAM;IAAAC,QAAA,EACxBZ,IAAA,CAACL,IAAI;MACHc,KAAK,EAAE,CACLC,MAAM,CAACG,SAAS,EAChB;QACEC,KAAK,EAAEV,UAAU,GAAGP,MAAM,CAACkB,KAAK,GAAGlB,MAAM,CAACmB;MAC5C,CAAC,CACD;MAAAJ,QAAA,EACA,kBAAiBP,OAAQ;IAAC,CACxB;EAAC,CACH,CAAC,GACL,IAAI;AACV,CAAC;AAED,IAAMK,MAAM,GAAGhB,UAAU,CAACuB,MAAM,CAAC;EAC/BN,KAAK,EAAE;IACLO,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,CAAC;IACNC,KAAK,EAAE;EACT,CAAC;EACDP,SAAS,EAAE;IACTQ,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,KAAK;IACjBC,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAetB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}