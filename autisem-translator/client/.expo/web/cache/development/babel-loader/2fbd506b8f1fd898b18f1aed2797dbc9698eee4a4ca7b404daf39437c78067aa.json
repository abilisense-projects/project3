{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport GenericForm from \"../shared/form\";\nimport validations from \"../shared/validations\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar fields = [{\n  name: 'User Name',\n  state: 'username',\n  placeholder: 'Enter your email',\n  type: 'text',\n  rules: validations.email\n}];\nexport default function ForgotYourPassword() {\n  var navigation = useNavigation();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    useremail = _useState2[0],\n    setUseremail = _useState2[1];\n  var handleUseremail = function handleUseremail() {\n    console.log(\"useremail:\", useremail);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Email\"\n    }), _jsx(TextInput, {\n      value: useremail,\n      onChangeText: setUseremail\n    }), _jsx(Pressable, {\n      onPress: function onPress() {\n        handleUseremail();\n        navigation.navigate(\"New Password\");\n      },\n      style: {\n        backgroundColor: \"#0f968c\",\n        padding: 10,\n        borderRadius: 5\n      },\n      children: _jsxs(Text, {\n        style: {\n          color: \"white\",\n          textAlign: \"center\"\n        },\n        children: [\"Reset Password\", \" \"]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","TextInput","Pressable","useNavigation","GenericForm","validations","jsx","_jsx","jsxs","_jsxs","fields","name","state","placeholder","type","rules","email","ForgotYourPassword","navigation","_useState","_useState2","_slicedToArray","useremail","setUseremail","handleUseremail","console","log","children","value","onChangeText","onPress","navigate","style","backgroundColor","padding","borderRadius","color","textAlign"],"sources":["C:/abilisense/project3/autisem-translator/client/components/login/forgotYourPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, TextInput, Pressable } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport GenericForm from '../shared/form';\r\nimport validations from '../shared/validations';\r\n\r\nconst fields = [\r\n  { name: 'User Name', state: 'username', placeholder: 'Enter your email',type: 'text',rules: validations.email},\r\n];\r\n\r\nexport default function ForgotYourPassword() {\r\n  const navigation = useNavigation();\r\n\r\n  const [useremail, setUseremail] = useState(\"\");\r\n\r\n  const handleUseremail = () => {\r\n    // Add your login logic here\r\n    console.log(\"useremail:\", useremail);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Text>Email</Text>\r\n      <TextInput value={useremail} onChangeText={setUseremail} />\r\n\r\n      <Pressable\r\n        onPress={() => {\r\n          handleUseremail();\r\n          navigation.navigate(\"New Password\");\r\n        }}\r\n        style={{ backgroundColor: \"#0f968c\", padding: 10, borderRadius: 5 }}\r\n      >\r\n        <Text style={{ color: \"white\", textAlign: \"center\" }}>\r\n          Reset Password{\" \"}\r\n        </Text>\r\n      </Pressable>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,SAAA;AAExC,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,WAAW;AAClB,OAAOC,WAAW;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhD,IAAMC,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,WAAW;EAAEC,KAAK,EAAE,UAAU;EAAEC,WAAW,EAAE,kBAAkB;EAACC,IAAI,EAAE,MAAM;EAACC,KAAK,EAAEV,WAAW,CAACW;AAAK,CAAC,CAC/G;AAED,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAC3C,IAAMC,UAAU,GAAGf,aAAa,CAAC,CAAC;EAElC,IAAAgB,SAAA,GAAkCrB,QAAQ,CAAC,EAAE,CAAC;IAAAsB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAE9B,IAAMI,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAE5BC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEJ,SAAS,CAAC;EACtC,CAAC;EAED,OACEb,KAAA,CAACV,IAAI;IAAA4B,QAAA,GACHpB,IAAA,CAACP,IAAI;MAAA2B,QAAA,EAAC;IAAK,CAAM,CAAC,EAClBpB,IAAA,CAACN,SAAS;MAAC2B,KAAK,EAAEN,SAAU;MAACO,YAAY,EAAEN;IAAa,CAAE,CAAC,EAE3DhB,IAAA,CAACL,SAAS;MACR4B,OAAO,EAAE,SAAAA,QAAA,EAAM;QACbN,eAAe,CAAC,CAAC;QACjBN,UAAU,CAACa,QAAQ,CAAC,cAAc,CAAC;MACrC,CAAE;MACFC,KAAK,EAAE;QAAEC,eAAe,EAAE,SAAS;QAAEC,OAAO,EAAE,EAAE;QAAEC,YAAY,EAAE;MAAE,CAAE;MAAAR,QAAA,EAEpElB,KAAA,CAACT,IAAI;QAACgC,KAAK,EAAE;UAAEI,KAAK,EAAE,OAAO;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAV,QAAA,GAAC,gBACtC,EAAC,GAAG;MAAA,CACd;IAAC,CACE,CAAC;EAAA,CACR,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}