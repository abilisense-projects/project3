{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport validations from \"../shared/validations\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar fields = [{\n  name: 'User Name',\n  state: 'username',\n  placeholder: 'Enter your email',\n  type: 'text',\n  rules: validations.email\n}, {\n  name: 'Password',\n  state: 'password',\n  placeholder: 'Enter your password',\n  type: 'text',\n  secureTextEntry: true,\n  rules: validations.password\n}];\nexport default function Login() {\n  var navigation = useNavigation();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    rememberMe = _useState6[0],\n    setRememberMe = _useState6[1];\n  var handleLogin = function handleLogin() {\n    console.log(\"Username:\", username);\n    console.log(\"Password:\", password);\n    console.log(\"Remember Me:\", rememberMe);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Username or primary email\"\n    }), _jsx(TextInput, {\n      value: username,\n      onChangeText: setUsername\n    }), _jsx(Text, {\n      children: \"Password\"\n    }), _jsx(TextInput, {\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }), _jsx(Pressable, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Forgot your password\");\n      },\n      children: _jsx(Text, {\n        style: {\n          color: \"red\"\n        },\n        children: \"Forgot your password?\"\n      })\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\"\n      },\n      children: [_jsx(CheckBox, {\n        value: rememberMe,\n        onValueChange: setRememberMe\n      }), _jsx(Text, {\n        style: {\n          marginLeft: 8\n        },\n        children: \"Remember me\"\n      })]\n    }), _jsx(Pressable, {\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        children: \"Login\"\n      })\n    }), _jsx(GenericForm, {\n      fields: fields,\n      onSubmit: onSubmit,\n      submitButton: \"Register\"\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","TextInput","Pressable","CheckBox","useNavigation","validations","jsx","_jsx","jsxs","_jsxs","fields","name","state","placeholder","type","rules","email","secureTextEntry","password","Login","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","setPassword","_useState5","_useState6","rememberMe","setRememberMe","handleLogin","console","log","children","value","onChangeText","onPress","navigate","style","color","flexDirection","alignItems","onValueChange","marginLeft","GenericForm","onSubmit","submitButton"],"sources":["C:/abilisense/project3/autisem-translator/client/components/login/login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, TextInput, Pressable, CheckBox } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport validations from '../shared/validations';\r\n\r\nconst fields = [\r\n  { name: 'User Name', state: 'username', placeholder: 'Enter your email',type: 'text',rules: validations.email},\r\n  { name: 'Password', state: 'password', placeholder: 'Enter your password',type: 'text', secureTextEntry: true ,rules: validations.password },\r\n];\r\n\r\nexport default function Login() {\r\n  const navigation = useNavigation();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n\r\n  const handleLogin = () => {\r\n    // Add your login logic here\r\n    console.log(\"Username:\", username);\r\n    console.log(\"Password:\", password);\r\n    console.log(\"Remember Me:\", rememberMe);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Text>Username or primary email</Text>\r\n      <TextInput value={username} onChangeText={setUsername} />\r\n\r\n      <Text>Password</Text>\r\n      <TextInput value={password} onChangeText={setPassword} secureTextEntry />\r\n\r\n      <Pressable onPress={() => navigation.navigate(\"Forgot your password\")}>\r\n        <Text style={{ color: \"red\" }}>Forgot your password?</Text>\r\n      </Pressable>\r\n\r\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n        <CheckBox value={rememberMe} onValueChange={setRememberMe} />\r\n        <Text style={{ marginLeft: 8 }}>Remember me</Text>\r\n      </View>\r\n\r\n      <Pressable onPress={handleLogin}>\r\n        <Text>Login</Text>\r\n      </Pressable>\r\n\r\n<GenericForm fields={fields} onSubmit={onSubmit} submitButton=\"Register\"></GenericForm>\r\n\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}