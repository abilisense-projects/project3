{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login() {\n  var navigation = useNavigation();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    rememberMe = _useState6[0],\n    setRememberMe = _useState6[1];\n  var handleLogin = function handleLogin() {\n    console.log(\"Username:\", username);\n    console.log(\"Password:\", password);\n    console.log(\"Remember Me:\", rememberMe);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Username or primary email\"\n    }), _jsx(TextInput, {\n      value: username,\n      onChangeText: setUsername\n    }), _jsx(Text, {\n      children: \"Password\"\n    }), _jsx(TextInput, {\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }), _jsx(Pressable, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Forgot your password\");\n      },\n      children: _jsx(Text, {\n        style: {\n          color: \"red\"\n        },\n        children: \"Forgot your password?\"\n      })\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\"\n      },\n      children: [_jsx(CheckBox, {\n        value: rememberMe,\n        onValueChange: setRememberMe\n      }), _jsx(Text, {\n        style: {\n          marginLeft: 8\n        },\n        children: \"Remember me\"\n      })]\n    }), _jsx(Pressable, {\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        children: \"Login\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","TextInput","Pressable","CheckBox","useNavigation","jsx","_jsx","jsxs","_jsxs","Login","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","rememberMe","setRememberMe","handleLogin","console","log","children","value","onChangeText","secureTextEntry","onPress","navigate","style","color","flexDirection","alignItems","onValueChange","marginLeft"],"sources":["C:/abilisense/project3/autisem-translator/client/components/login/login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, TextInput, Pressable, CheckBox } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport default function Login() {\r\n  const navigation = useNavigation();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n\r\n  const handleLogin = () => {\r\n    // Add your login logic here\r\n    console.log(\"Username:\", username);\r\n    console.log(\"Password:\", password);\r\n    console.log(\"Remember Me:\", rememberMe);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Text>Username or primary email</Text>\r\n      <TextInput value={username} onChangeText={setUsername} />\r\n\r\n      <Text>Password</Text>\r\n      <TextInput value={password} onChangeText={setPassword} secureTextEntry />\r\n\r\n      <Pressable onPress={() => navigation.navigate(\"Forgot your password\")}>\r\n        <Text style={{ color: \"red\" }}>Forgot your password?</Text>\r\n      </Pressable>\r\n\r\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n        <CheckBox value={rememberMe} onValueChange={setRememberMe} />\r\n        <Text style={{ marginLeft: 8 }}>Remember me</Text>\r\n      </View>\r\n\r\n      \r\n\r\n      <Pressable onPress={handleLogin}>\r\n        <Text>Login</Text>\r\n      </Pressable>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,QAAA;AAExC,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,eAAe,SAASC,KAAKA,CAAA,EAAG;EAC9B,IAAMC,UAAU,GAAGN,aAAa,CAAC,CAAC;EAElC,IAAAO,SAAA,GAAgCb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAgClB,QAAQ,CAAC,EAAE,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAAoCtB,QAAQ,CAAC,KAAK,CAAC;IAAAuB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA5CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAEhC,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IAExBC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEZ,QAAQ,CAAC;IAClCW,OAAO,CAACC,GAAG,CAAC,WAAW,EAAER,QAAQ,CAAC;IAClCO,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEJ,UAAU,CAAC;EACzC,CAAC;EAED,OACEd,KAAA,CAACT,IAAI;IAAA4B,QAAA,GACHrB,IAAA,CAACN,IAAI;MAAA2B,QAAA,EAAC;IAAyB,CAAM,CAAC,EACtCrB,IAAA,CAACL,SAAS;MAAC2B,KAAK,EAAEd,QAAS;MAACe,YAAY,EAAEd;IAAY,CAAE,CAAC,EAEzDT,IAAA,CAACN,IAAI;MAAA2B,QAAA,EAAC;IAAQ,CAAM,CAAC,EACrBrB,IAAA,CAACL,SAAS;MAAC2B,KAAK,EAAEV,QAAS;MAACW,YAAY,EAAEV,WAAY;MAACW,eAAe;IAAA,CAAE,CAAC,EAEzExB,IAAA,CAACJ,SAAS;MAAC6B,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMrB,UAAU,CAACsB,QAAQ,CAAC,sBAAsB,CAAC;MAAA,CAAC;MAAAL,QAAA,EACpErB,IAAA,CAACN,IAAI;QAACiC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAAP,QAAA,EAAC;MAAqB,CAAM;IAAC,CAClD,CAAC,EAEZnB,KAAA,CAACT,IAAI;MAACkC,KAAK,EAAE;QAAEE,aAAa,EAAE,KAAK;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAT,QAAA,GAC1DrB,IAAA,CAACH,QAAQ;QAACyB,KAAK,EAAEN,UAAW;QAACe,aAAa,EAAEd;MAAc,CAAE,CAAC,EAC7DjB,IAAA,CAACN,IAAI;QAACiC,KAAK,EAAE;UAAEK,UAAU,EAAE;QAAE,CAAE;QAAAX,QAAA,EAAC;MAAW,CAAM,CAAC;IAAA,CAC9C,CAAC,EAIPrB,IAAA,CAACJ,SAAS;MAAC6B,OAAO,EAAEP,WAAY;MAAAG,QAAA,EAC9BrB,IAAA,CAACN,IAAI;QAAA2B,QAAA,EAAC;MAAK,CAAM;IAAC,CACT,CAAC;EAAA,CACR,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}