{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Audio } from 'expo-av';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Recorder = function Recorder() {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    recording = _useState2[0],\n    setRecording = _useState2[1];\n  function startRecording() {\n    return _startRecording.apply(this, arguments);\n  }\n  function _startRecording() {\n    _startRecording = _asyncToGenerator(function* () {\n      try {\n        console.log('Requesting permissions..');\n        yield Audio.requestPermissionsAsync();\n        yield Audio.setAudioModeAsync({\n          allowsRecordingIOS: true,\n          playsInSilentModeIOS: true\n        });\n        console.log('Starting recording..');\n        var _yield$Audio$Recordin = yield Audio.Recording.createAsync(Audio.RecordingOptionsPresets.HIGH_QUALITY),\n          _recording = _yield$Audio$Recordin.recording;\n        setRecording(_recording);\n        console.log(_recording.getURI('sound.mp3'));\n        console.log('Recording started');\n      } catch (err) {\n        console.error('Failed to start recording', err);\n      }\n    });\n    return _startRecording.apply(this, arguments);\n  }\n  function stopRecording() {\n    return _stopRecording.apply(this, arguments);\n  }\n  function _stopRecording() {\n    _stopRecording = _asyncToGenerator(function* () {\n      console.log('Stopping recording..');\n      setRecording(undefined);\n      yield recording.stopAndUnloadAsync();\n      yield Audio.setAudioModeAsync({\n        allowsRecordingIOS: false\n      });\n      var uri = recording.getURI();\n      console.log('Recording stopped and stored at', uri);\n    });\n    return _stopRecording.apply(this, arguments);\n  }\n  return _jsx(View, {\n    style: {\n      alignItems: 'center',\n      marginTop: 20\n    },\n    children: _jsx(TouchableOpacity, {\n      onPress: recording ? stopRecording : startRecording,\n      style: {\n        width: 80,\n        height: 80,\n        borderRadius: 40,\n        backgroundColor: recording ? 'red' : 'green',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(Text, {\n        style: {\n          color: 'white',\n          fontSize: 16\n        },\n        children: recording ? 'Stop' : 'Record'\n      })\n    })\n  });\n};\nexport default Recorder;","map":{"version":3,"names":["React","useState","View","TouchableOpacity","Text","Audio","jsx","_jsx","Recorder","_useState","_useState2","_slicedToArray","recording","setRecording","startRecording","_startRecording","apply","arguments","_asyncToGenerator","console","log","requestPermissionsAsync","setAudioModeAsync","allowsRecordingIOS","playsInSilentModeIOS","_yield$Audio$Recordin","Recording","createAsync","RecordingOptionsPresets","HIGH_QUALITY","getURI","err","error","stopRecording","_stopRecording","undefined","stopAndUnloadAsync","uri","style","alignItems","marginTop","children","onPress","width","height","borderRadius","backgroundColor","justifyContent","color","fontSize"],"sources":["C:/Users/h0533/Desktop/project3/autisem-translator/client/components/recording/recording.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TouchableOpacity, Text } from 'react-native';\r\nimport { Audio } from 'expo-av';\r\n\r\n\r\nconst Recorder = () => {\r\n  const [recording, setRecording] = useState();\r\n\r\n  async function startRecording() {\r\n    try {\r\n      console.log('Requesting permissions..');\r\n      await Audio.requestPermissionsAsync();\r\n      await Audio.setAudioModeAsync({\r\n        allowsRecordingIOS: true,\r\n        playsInSilentModeIOS: true,\r\n      });\r\n\r\n      console.log('Starting recording..');\r\n      const { recording } = await Audio.Recording.createAsync( Audio.RecordingOptionsPresets.HIGH_QUALITY\r\n      );\r\n      setRecording(recording);\r\n      console.log(recording.getURI('sound.mp3'));\r\n      console.log('Recording started');\r\n    } catch (err) {\r\n      console.error('Failed to start recording', err);\r\n    }\r\n  }\r\n\r\n  async function stopRecording() {\r\n    console.log('Stopping recording..');\r\n    setRecording(undefined);\r\n    await recording.stopAndUnloadAsync();\r\n    await Audio.setAudioModeAsync(\r\n      {\r\n        allowsRecordingIOS: false,\r\n      }\r\n    );\r\n    const uri = recording.getURI();\r\n    console.log('Recording stopped and stored at', uri);\r\n  }\r\n\r\n  return (\r\n    <View style={{ alignItems: 'center', marginTop: 20 }}>\r\n      <TouchableOpacity\r\n        onPress={recording ? stopRecording : startRecording}\r\n        style={{\r\n          width: 80,\r\n          height: 80,\r\n          borderRadius: 40,\r\n          backgroundColor: recording ? 'red' : 'green',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Text style={{ color: 'white', fontSize: 16 }}>\r\n          {recording ? 'Stop' : 'Record'}\r\n        </Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Recorder;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}