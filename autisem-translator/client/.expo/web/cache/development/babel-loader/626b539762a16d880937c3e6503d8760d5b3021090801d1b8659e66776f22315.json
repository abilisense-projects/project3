{"ast":null,"code":"import React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport GenericForm from \"../shared/form\";\nimport validations from \"../shared/validations\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar fields = [{\n  name: 'User Name',\n  state: 'username',\n  placeholder: 'Enter your email',\n  type: 'text',\n  rules: validations.email\n}];\nexport default function ForgotYourPassword() {\n  var navigation = useNavigation();\n  var onSubmit = function onSubmit(data) {\n    console.log('Form data:', data);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Pressable, {\n      onPress: function onPress() {\n        handleUseremail();\n        navigation.navigate(\"New Password\");\n      },\n      style: {\n        backgroundColor: \"#0f968c\",\n        padding: 10,\n        borderRadius: 5\n      },\n      children: _jsxs(Text, {\n        style: {\n          color: \"white\",\n          textAlign: \"center\"\n        },\n        children: [\"Reset Password\", \" \"]\n      })\n    }), _jsx(GenericForm, {\n      fields: fields,\n      onSubmit: onSubmit,\n      submitButton: \"Reset Password\"\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","TextInput","Pressable","useNavigation","GenericForm","validations","jsxs","_jsxs","jsx","_jsx","fields","name","state","placeholder","type","rules","email","ForgotYourPassword","navigation","onSubmit","data","console","log","children","onPress","handleUseremail","navigate","style","backgroundColor","padding","borderRadius","color","textAlign","submitButton"],"sources":["C:/abilisense/project3/autisem-translator/client/components/login/forgotYourPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, TextInput, Pressable } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport GenericForm from '../shared/form';\r\nimport validations from '../shared/validations';\r\n\r\nconst fields = [\r\n  { name: 'User Name', state: 'username', placeholder: 'Enter your email',type: 'text',rules: validations.email},\r\n];\r\n\r\nexport default function ForgotYourPassword() {\r\n  const navigation = useNavigation();\r\n\r\n  // const [useremail, setUseremail] = useState(\"\");\r\n\r\n  // const handleUseremail = () => {\r\n  //   // Add your login logic here\r\n  //   console.log(\"useremail:\", useremail);\r\n  // };\r\n\r\n  const onSubmit = (data) => {\r\n    //clear form?\r\n    //Handle form submission logic\r\n    //save the data in db\r\n    //did all data go through validations / wran user\r\n    //save data / send to server\r\n    console.log('Form data:', data);\r\n    \r\n  };\r\n\r\n  return (\r\n    <View>\r\n      {/* <Text>Email</Text>\r\n      <TextInput value={useremail} onChangeText={setUseremail} /> */}\r\n\r\n      <Pressable\r\n        onPress={() => {\r\n          handleUseremail();\r\n          navigation.navigate(\"New Password\");\r\n        }}\r\n        style={{ backgroundColor: \"#0f968c\", padding: 10, borderRadius: 5 }}\r\n      >\r\n        <Text style={{ color: \"white\", textAlign: \"center\" }}>\r\n          Reset Password{\" \"}\r\n        </Text>\r\n      </Pressable>\r\n\r\n      <GenericForm fields={fields} onSubmit={onSubmit} submitButton=\"Reset Password\"></GenericForm>\r\n\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,SAAA;AAExC,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,WAAW;AAClB,OAAOC,WAAW;AAA8B,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAEhD,IAAMC,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,WAAW;EAAEC,KAAK,EAAE,UAAU;EAAEC,WAAW,EAAE,kBAAkB;EAACC,IAAI,EAAE,MAAM;EAACC,KAAK,EAAEV,WAAW,CAACW;AAAK,CAAC,CAC/G;AAED,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAC3C,IAAMC,UAAU,GAAGf,aAAa,CAAC,CAAC;EASlC,IAAMgB,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,IAAI,EAAK;IAMzBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,IAAI,CAAC;EAEjC,CAAC;EAED,OACEb,KAAA,CAACR,IAAI;IAAAwB,QAAA,GAIHd,IAAA,CAACP,SAAS;MACRsB,OAAO,EAAE,SAAAA,QAAA,EAAM;QACbC,eAAe,CAAC,CAAC;QACjBP,UAAU,CAACQ,QAAQ,CAAC,cAAc,CAAC;MACrC,CAAE;MACFC,KAAK,EAAE;QAAEC,eAAe,EAAE,SAAS;QAAEC,OAAO,EAAE,EAAE;QAAEC,YAAY,EAAE;MAAE,CAAE;MAAAP,QAAA,EAEpEhB,KAAA,CAACP,IAAI;QAAC2B,KAAK,EAAE;UAAEI,KAAK,EAAE,OAAO;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAT,QAAA,GAAC,gBACtC,EAAC,GAAG;MAAA,CACd;IAAC,CACE,CAAC,EAEZd,IAAA,CAACL,WAAW;MAACM,MAAM,EAAEA,MAAO;MAACS,QAAQ,EAAEA,QAAS;MAACc,YAAY,EAAC;IAAgB,CAAc,CAAC;EAAA,CAEzF,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}