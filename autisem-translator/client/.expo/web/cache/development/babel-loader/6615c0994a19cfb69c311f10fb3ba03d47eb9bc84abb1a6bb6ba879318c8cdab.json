{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport GenericForm from \"../shared/form\";\nimport validations from \"../shared/validations\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar userTypeOptions = [{\n  name: 'Select User Type',\n  value: ''\n}, {\n  name: 'Therapist',\n  value: 'therapist'\n}, {\n  name: 'Treated',\n  value: 'treated'\n}];\nvar fields = [{\n  name: 'User Name',\n  state: 'username',\n  placeholder: 'Enter your email',\n  type: 'text',\n  rules: validations.email\n}, {\n  name: 'First Name',\n  state: 'firstName',\n  placeholder: 'Enter your firstName',\n  type: 'text',\n  rules: validations.name\n}, {\n  name: 'Last Name',\n  state: 'lastName',\n  placeholder: 'Enter your lastName',\n  type: 'text',\n  rules: validations.name\n}, {\n  name: 'Phone Number',\n  state: 'phoneNumber',\n  placeholder: 'Enter your phoneNumber',\n  type: 'text',\n  rules: validations.phoneNumber\n}, {\n  name: 'Password',\n  state: 'password',\n  placeholder: 'Enter your password',\n  type: 'text',\n  secureTextEntry: true,\n  rules: validations.password\n}, {\n  name: 'Type',\n  state: 'type',\n  options: userTypeOptions,\n  type: 'picker',\n  rules: {}\n}];\nexport default function RegistrationForm() {\n  var onSubmit = function onSubmit(data) {\n    console.log('Form data:', data);\n  };\n  return _jsx(View, {\n    children: _jsx(GenericForm, {\n      fields: fields,\n      onSubmit: onSubmit,\n      submitButton: \"Register\"\n    })\n  });\n}","map":{"version":3,"names":["React","View","GenericForm","validations","jsx","_jsx","userTypeOptions","name","value","fields","state","placeholder","type","rules","email","phoneNumber","secureTextEntry","password","options","RegistrationForm","onSubmit","data","console","log","children","submitButton"],"sources":["C:/Users/malky/Desktop/project3/autisem-translator/client/components/register/registerForm.js"],"sourcesContent":["import React from 'react';\r\nimport { View } from 'react-native';\r\nimport GenericForm from '../shared/form';\r\nimport validations from '../shared/validations';\r\n\r\nconst userTypeOptions = [\r\n  { name: 'Select User Type', value: '' },\r\n  { name: 'Therapist', value: 'therapist' },\r\n  { name: 'Treated', value: 'treated' },\r\n];\r\n\r\nconst fields = [\r\n  { name: 'User Name', state: 'username', placeholder: 'Enter your email',type: 'text',rules: validations.email},\r\n  { name: 'First Name', state: 'firstName', placeholder: 'Enter your firstName',type: 'text' ,rules: validations.name},\r\n  { name: 'Last Name', state: 'lastName', placeholder: 'Enter your lastName',type: 'text' ,rules: validations.name },\r\n  { name: 'Phone Number', state: 'phoneNumber', placeholder: 'Enter your phoneNumber',type: 'text' ,rules: validations.phoneNumber },\r\n  { name: 'Password', state: 'password', placeholder: 'Enter your password',type: 'text', secureTextEntry: true ,rules: validations.password },\r\n  { name: 'Type', state: 'type', options: userTypeOptions,type: 'picker', rules: {} },\r\n];\r\n\r\n\r\n\r\nexport default function RegistrationForm() {\r\n  const onSubmit = (data) => {\r\n    // Handle form submission logic\r\n    //save the data in db\r\n    //did all data go through validations / wran user\r\n    //save data / send to server\r\n    console.log('Form data:', data);\r\n  };\r\n  return (\r\n    <View>\r\n      {/* user userDetails should come back from the form (as an event?)\r\n    check if fields & userTypeOptions are not null */}\r\n      {/* <Form fields={fields} userTypeOptions={userTypeOptions} ></Form> */}\r\n      <GenericForm fields={fields} onSubmit={onSubmit} submitButton=\"Register\"></GenericForm>\r\n    </View>\r\n  );\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAE1B,OAAOC,WAAW;AAClB,OAAOC,WAAW;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAEhD,IAAMC,eAAe,GAAG,CACtB;EAAEC,IAAI,EAAE,kBAAkB;EAAEC,KAAK,EAAE;AAAG,CAAC,EACvC;EAAED,IAAI,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAY,CAAC,EACzC;EAAED,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAU,CAAC,CACtC;AAED,IAAMC,MAAM,GAAG,CACb;EAAEF,IAAI,EAAE,WAAW;EAAEG,KAAK,EAAE,UAAU;EAAEC,WAAW,EAAE,kBAAkB;EAACC,IAAI,EAAE,MAAM;EAACC,KAAK,EAAEV,WAAW,CAACW;AAAK,CAAC,EAC9G;EAAEP,IAAI,EAAE,YAAY;EAAEG,KAAK,EAAE,WAAW;EAAEC,WAAW,EAAE,sBAAsB;EAACC,IAAI,EAAE,MAAM;EAAEC,KAAK,EAAEV,WAAW,CAACI;AAAI,CAAC,EACpH;EAAEA,IAAI,EAAE,WAAW;EAAEG,KAAK,EAAE,UAAU;EAAEC,WAAW,EAAE,qBAAqB;EAACC,IAAI,EAAE,MAAM;EAAEC,KAAK,EAAEV,WAAW,CAACI;AAAK,CAAC,EAClH;EAAEA,IAAI,EAAE,cAAc;EAAEG,KAAK,EAAE,aAAa;EAAEC,WAAW,EAAE,wBAAwB;EAACC,IAAI,EAAE,MAAM;EAAEC,KAAK,EAAEV,WAAW,CAACY;AAAY,CAAC,EAClI;EAAER,IAAI,EAAE,UAAU;EAAEG,KAAK,EAAE,UAAU;EAAEC,WAAW,EAAE,qBAAqB;EAACC,IAAI,EAAE,MAAM;EAAEI,eAAe,EAAE,IAAI;EAAEH,KAAK,EAAEV,WAAW,CAACc;AAAS,CAAC,EAC5I;EAAEV,IAAI,EAAE,MAAM;EAAEG,KAAK,EAAE,MAAM;EAAEQ,OAAO,EAAEZ,eAAe;EAACM,IAAI,EAAE,QAAQ;EAAEC,KAAK,EAAE,CAAC;AAAE,CAAC,CACpF;AAID,eAAe,SAASM,gBAAgBA,CAAA,EAAG;EACzC,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,IAAI,EAAK;IAKzBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,IAAI,CAAC;EACjC,CAAC;EACD,OACEhB,IAAA,CAACJ,IAAI;IAAAuB,QAAA,EAIHnB,IAAA,CAACH,WAAW;MAACO,MAAM,EAAEA,MAAO;MAACW,QAAQ,EAAEA,QAAS;MAACK,YAAY,EAAC;IAAU,CAAc;EAAC,CACnF,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}