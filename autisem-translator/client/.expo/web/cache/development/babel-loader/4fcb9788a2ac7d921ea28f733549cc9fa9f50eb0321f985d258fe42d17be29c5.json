{"ast":null,"code":"import * as TurboModuleRegistry from \"../TurboModule/TurboModuleRegistry\";\nexport default TurboModuleRegistry.get('Appearance');","map":{"version":3,"names":["TurboModuleRegistry","get"],"sources":["C:/abilisense/project3/autisem-translator/client/node_modules/react-native/Libraries/Utilities/NativeAppearance.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nexport type ColorSchemeName = 'light' | 'dark';\n\nexport type AppearancePreferences = {|\n  // TODO: (hramos) T52919652 Use ?ColorSchemeName once codegen supports union\n  // types.\n  /* 'light' | 'dark' */\n  colorScheme?: ?string,\n|};\n\nexport interface Spec extends TurboModule {\n  // TODO: (hramos) T52919652 Use ?ColorSchemeName once codegen supports union\n  // types.\n  /* 'light' | 'dark' */\n  +getColorScheme: () => ?string;\n  +setColorScheme?: (colorScheme: string) => void;\n\n  // RCTEventEmitter\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('Appearance'): ?Spec);\n"],"mappings":"AAYA,OAAO,KAAKA,mBAAmB;AAuB/B,eAAgBA,mBAAmB,CAACC,GAAG,CAAO,YAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}