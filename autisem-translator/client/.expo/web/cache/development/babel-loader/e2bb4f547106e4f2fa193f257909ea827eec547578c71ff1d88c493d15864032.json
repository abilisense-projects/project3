{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Audio } from 'expo-av';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    recording = _useState2[0],\n    setRecording = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isRecording = _useState4[0],\n    setIsRecording = _useState4[1];\n  var startRecording = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        console.log('Recording started');\n        var _recording = new Audio.Recording();\n        yield _recording.prepareToRecordAsync(Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY);\n        yield _recording.startAsync();\n        setRecording(_recording);\n        setIsRecording(true);\n      } catch (error) {\n        console.error('Failed to start recording', error);\n      }\n    });\n    return function startRecording() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var stopRecording = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!recording) return;\n      try {\n        console.log('Recording stopped');\n        yield recording.stopAndUnloadAsync();\n        var a = new Audio(recording.getURI());\n        setIsRecording(false);\n      } catch (error) {\n        console.error('Failed to stop recording', error);\n      }\n    });\n    return function stopRecording() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleButtonPress = function handleButtonPress() {\n    if (isRecording) {\n      stopRecording();\n    } else {\n      startRecording();\n    }\n  };\n  var buttonColor = isRecording ? 'green' : 'red';\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(TouchableOpacity, {\n      style: [styles.recordButton, {\n        backgroundColor: buttonColor\n      }],\n      onPress: handleButtonPress,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: isRecording ? 'Stop Recording' : 'Start Recording'\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  recordButton: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: 'white'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","TouchableOpacity","Text","StyleSheet","Audio","jsx","_jsx","App","_useState","_useState2","_slicedToArray","recording","setRecording","_useState3","_useState4","isRecording","setIsRecording","startRecording","_ref","_asyncToGenerator","console","log","Recording","prepareToRecordAsync","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","startAsync","error","apply","arguments","stopRecording","_ref2","stopAndUnloadAsync","a","getURI","handleButtonPress","buttonColor","style","styles","container","children","recordButton","backgroundColor","onPress","buttonText","create","flex","justifyContent","alignItems","width","height","borderRadius","color"],"sources":["C:/Users/h0533/Desktop/project3/autisem-translator/client/components/recording/recording.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet } from 'react-native';\r\nimport { Audio } from 'expo-av';\r\n\r\nexport default function App() {\r\n  const [recording, setRecording] = useState(null);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n\r\n \r\n    const startRecording = async () => {\r\n      try {\r\n        console.log('Recording started');\r\n        const recording = new Audio.Recording();\r\n        await recording.prepareToRecordAsync(Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY);\r\n        await recording.startAsync();\r\n        setRecording(recording);\r\n        setIsRecording(true);\r\n      } catch (error) {\r\n        console.error('Failed to start recording', error);\r\n      }\r\n    };\r\n\r\n    const stopRecording = async () => {\r\n      if (!recording) return;\r\n\r\n      try {\r\n        console.log('Recording stopped');\r\n        await recording.stopAndUnloadAsync();\r\n        let a  = new Audio(recording.getURI())\r\n        setIsRecording(false);\r\n      } catch (error) {\r\n        console.error('Failed to stop recording', error);\r\n      }\r\n    };\r\n\r\n\r\n  const handleButtonPress = () => {\r\n    if (isRecording) {\r\n      stopRecording();\r\n    } else {\r\n      startRecording();\r\n    }\r\n  };\r\n\r\n  const buttonColor = isRecording ? 'green' : 'red';\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity\r\n        style={[styles.recordButton, { backgroundColor: buttonColor }]}\r\n        onPress={handleButtonPress}\r\n      >\r\n        <Text style={styles.buttonText}>\r\n          {isRecording ? 'Stop Recording' : 'Start Recording'}\r\n        </Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  recordButton: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 50,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}