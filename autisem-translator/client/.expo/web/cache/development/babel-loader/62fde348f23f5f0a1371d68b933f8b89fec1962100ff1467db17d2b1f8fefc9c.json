{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function NewPasswordComp() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    newPassword = _useState2[0],\n    setNewPassword = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    repeatPassword = _useState4[0],\n    setrepeatPassword = _useState4[1];\n  var handleNewPassword = function handleNewPassword() {\n    if (newPassword === repeatPassword) {\n      console.log(\"New Password:\", newPassword);\n      console.log(\"Repeat Password:\", repeatPassword);\n    } else {\n      Alert.alert(\"Error\", \"Passwords do not match\", [{\n        text: \"OK\"\n      }]);\n    }\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"New Password\"\n    }), _jsx(Text, {\n      children: \"New Password\"\n    }), _jsx(TextInput, {\n      value: newPassword,\n      onChangeText: setNewPassword,\n      secureTextEntry: true\n    }), _jsx(Text, {\n      children: \"Repeat password\"\n    }), _jsx(TextInput, {\n      value: repeatPassword,\n      onChangeText: setrepeatPassword,\n      secureTextEntry: true\n    }), _jsx(TouchableOpacity, {\n      onPress: handleNewPassword,\n      style: {\n        backgroundColor: \"#0f968c\",\n        padding: 10,\n        borderRadius: 5\n      },\n      children: _jsx(Text, {\n        style: {\n          color: \"white\",\n          textAlign: \"center\"\n        },\n        children: \"Save \"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","NewPasswordComp","_useState","_useState2","_slicedToArray","newPassword","setNewPassword","_useState3","_useState4","repeatPassword","setrepeatPassword","handleNewPassword","console","log","Alert","alert","text","children","value","onChangeText","secureTextEntry","onPress","style","backgroundColor","padding","borderRadius","color","textAlign"],"sources":["C:/abilisense/project3/autisem-translator/client/components/login/newPasswordComp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, TextInput, TouchableOpacity } from \"react-native\";\r\nexport default function NewPasswordComp() {\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [repeatPassword, setrepeatPassword] = useState(\"\");\r\n\r\n  const handleNewPassword = () => {\r\n    // Add your login logic here\r\n     // Check if passwords match\r\n     if (newPassword === repeatPassword) {\r\n        // Passwords match, continue with your logic\r\n    console.log(\"New Password:\", newPassword);\r\n    console.log(\"Repeat Password:\", repeatPassword);\r\n} else {\r\n    // Passwords do not match, show an error message\r\n    Alert.alert(\"Error\", \"Passwords do not match\", [{ text: \"OK\" }]);\r\n  }\r\n    \r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Text>New Password</Text>\r\n\r\n      <Text>New Password</Text>\r\n      <TextInput\r\n        value={newPassword}\r\n        onChangeText={setNewPassword}\r\n        // placeholder=\"Enter your password\"\r\n        secureTextEntry\r\n      />\r\n\r\n      <Text>Repeat password</Text>\r\n      <TextInput\r\n        value={repeatPassword}\r\n        onChangeText={setrepeatPassword}\r\n        // placeholder=\"Enter your password\"\r\n        secureTextEntry\r\n      />\r\n\r\n      <TouchableOpacity\r\n        onPress={handleNewPassword}\r\n        style={{ backgroundColor: \"#0f968c\", padding: 10, borderRadius: 5 }}\r\n      >\r\n        <Text style={{ color: \"white\", textAlign: \"center\" }}>Save </Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAExC,eAAe,SAASC,eAAeA,CAAA,EAAG;EACxC,IAAAC,SAAA,GAAsCV,QAAQ,CAAC,EAAE,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAClC,IAAAI,UAAA,GAA4Cf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAjDE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EAExC,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAG7B,IAAIN,WAAW,KAAKI,cAAc,EAAE;MAErCG,OAAO,CAACC,GAAG,CAAC,eAAe,EAAER,WAAW,CAAC;MACzCO,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,cAAc,CAAC;IACnD,CAAC,MAAM;MAEHK,KAAK,CAACC,KAAK,CAAC,OAAO,EAAE,wBAAwB,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAK,CAAC,CAAC,CAAC;IAClE;EAEA,CAAC;EAED,OACEhB,KAAA,CAACP,IAAI;IAAAwB,QAAA,GACHnB,IAAA,CAACJ,IAAI;MAAAuB,QAAA,EAAC;IAAY,CAAM,CAAC,EAEzBnB,IAAA,CAACJ,IAAI;MAAAuB,QAAA,EAAC;IAAY,CAAM,CAAC,EACzBnB,IAAA,CAACH,SAAS;MACRuB,KAAK,EAAEb,WAAY;MACnBc,YAAY,EAAEb,cAAe;MAE7Bc,eAAe;IAAA,CAChB,CAAC,EAEFtB,IAAA,CAACJ,IAAI;MAAAuB,QAAA,EAAC;IAAe,CAAM,CAAC,EAC5BnB,IAAA,CAACH,SAAS;MACRuB,KAAK,EAAET,cAAe;MACtBU,YAAY,EAAET,iBAAkB;MAEhCU,eAAe;IAAA,CAChB,CAAC,EAEFtB,IAAA,CAACF,gBAAgB;MACfyB,OAAO,EAAEV,iBAAkB;MAC3BW,KAAK,EAAE;QAAEC,eAAe,EAAE,SAAS;QAAEC,OAAO,EAAE,EAAE;QAAEC,YAAY,EAAE;MAAE,CAAE;MAAAR,QAAA,EAEpEnB,IAAA,CAACJ,IAAI;QAAC4B,KAAK,EAAE;UAAEI,KAAK,EAAE,OAAO;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAV,QAAA,EAAC;MAAK,CAAM;IAAC,CAClD,CAAC;EAAA,CACf,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}