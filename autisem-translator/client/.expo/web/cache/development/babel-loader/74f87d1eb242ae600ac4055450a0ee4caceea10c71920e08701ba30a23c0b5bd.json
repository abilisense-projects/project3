{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar F = function F() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState({}),\n    _useState8 = _slicedToArray(_useState7, 2),\n    errors = _useState8[0],\n    setErrors = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isFormValid = _useState10[0],\n    setIsFormValid = _useState10[1];\n  useEffect(function () {\n    validateForm();\n  }, [name, email, password]);\n  var validateForm = function validateForm() {\n    var errors = {};\n    if (!name) {\n      errors.name = 'Name is required.';\n    }\n    if (!email) {\n      errors.email = 'Email is required.';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      errors.email = 'Email is invalid.';\n    }\n    if (!password) {\n      errors.password = 'Password is required.';\n    } else if (password.length < 6) {\n      errors.password = 'Password must be at least 6 characters.';\n    }\n    setErrors(errors);\n    setIsFormValid(Object.keys(errors).length === 0);\n  };\n  var handleSubmit = function handleSubmit() {\n    validateForm();\n    if (isFormValid) {\n      console.log('Form submitted successfully!');\n    } else {\n      console.log('Form has errors. Please correct them.');\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Name\",\n      value: name,\n      onChangeText: setName\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }), _jsx(TouchableOpacity, {\n      style: [styles.button, {\n        opacity: isFormValid ? 1 : 0.5\n      }],\n      disabled: !isFormValid,\n      onPress: handleSubmit,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Submit\"\n      })\n    }), Object.values(errors).map(function (error, index) {\n      return _jsx(Text, {\n        style: styles.error,\n        children: error\n      }, index);\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    justifyContent: 'center'\n  },\n  input: {\n    height: 60,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    marginBottom: 12,\n    paddingHorizontal: 10,\n    borderRadius: 8,\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: 'green',\n    borderRadius: 8,\n    paddingVertical: 10,\n    alignItems: 'center',\n    marginTop: 16,\n    marginBottom: 12\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  error: {\n    color: 'red',\n    fontSize: 20,\n    marginBottom: 12\n  }\n});\nexport default F;","map":{"version":3,"names":["React","useState","useEffect","View","TextInput","TouchableOpacity","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","F","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","errors","setErrors","_useState9","_useState10","isFormValid","setIsFormValid","validateForm","test","length","Object","keys","handleSubmit","console","log","style","styles","container","children","input","placeholder","value","onChangeText","secureTextEntry","button","opacity","disabled","onPress","buttonText","values","map","error","index","create","flex","padding","justifyContent","height","borderColor","borderWidth","marginBottom","paddingHorizontal","borderRadius","fontSize","backgroundColor","paddingVertical","alignItems","marginTop","color","fontWeight"],"sources":["C:/Users/malky/Desktop/project3/autisem-translator/client/components/register/f.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; \r\nimport { View, TextInput, TouchableOpacity, \r\n\tText, StyleSheet } from 'react-native'; \r\n\r\nconst F = () => { \r\n\tconst [name, setName] = useState(''); \r\n\tconst [email, setEmail] = useState(''); \r\n\tconst [password, setPassword] = useState(''); \r\n\tconst [errors, setErrors] = useState({}); \r\n\tconst [isFormValid, setIsFormValid] = useState(false); \r\n\r\n\tuseEffect(() => { \r\n\r\n\t\t// Trigger form validation when name, \r\n\t\t// email, or password changes \r\n\t\tvalidateForm(); \r\n\t}, [name, email, password]); \r\n\r\n\tconst validateForm = () => { \r\n\t\tlet errors = {}; \r\n\r\n\t\t// Validate name field \r\n\t\tif (!name) { \r\n\t\t\terrors.name = 'Name is required.'; \r\n\t\t} \r\n\r\n\t\t// Validate email field \r\n\t\tif (!email) { \r\n\t\t\terrors.email = 'Email is required.'; \r\n\t\t} else if (!/\\S+@\\S+\\.\\S+/.test(email)) { \r\n\t\t\terrors.email = 'Email is invalid.'; \r\n\t\t} \r\n\r\n\t\t// Validate password field \r\n\t\tif (!password) { \r\n\t\t\terrors.password = 'Password is required.'; \r\n\t\t} else if (password.length < 6) { \r\n\t\t\terrors.password = 'Password must be at least 6 characters.'; \r\n\t\t} \r\n\r\n\t\t// Set the errors and update form validity \r\n\t\tsetErrors(errors); \r\n\t\tsetIsFormValid(Object.keys(errors).length === 0); \r\n\t}; \r\n\r\n\tconst handleSubmit = () => { \r\n        validateForm(); \r\n\t\tif (isFormValid) { \r\n\r\n\t\t\t// Form is valid, perform the submission logic \r\n\t\t\tconsole.log('Form submitted successfully!'); \r\n\t\t} else { \r\n\t\t\t\r\n\t\t\t// Form is invalid, display error messages \r\n\t\t\tconsole.log('Form has errors. Please correct them.'); \r\n\t\t} \r\n\t}; \r\n\r\n\treturn ( \r\n\t\t<View style={styles.container}> \r\n\t\t\t<TextInput \r\n\t\t\t\tstyle={styles.input} \r\n\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\tvalue={name} \r\n\t\t\t\tonChangeText={setName} \r\n\t\t\t/> \r\n\t\t\t<TextInput \r\n\t\t\t\tstyle={styles.input} \r\n\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\tvalue={email} \r\n\t\t\t\tonChangeText={setEmail} \r\n\t\t\t/> \r\n\t\t\t<TextInput \r\n\t\t\t\tstyle={styles.input} \r\n\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\tvalue={password} \r\n\t\t\t\tonChangeText={setPassword} \r\n\t\t\t\tsecureTextEntry \r\n\t\t\t/> \r\n\t\t\t<TouchableOpacity \r\n\t\t\t\tstyle={[styles.button, { opacity: isFormValid ? 1 : 0.5 }]} \r\n\t\t\t\tdisabled={!isFormValid} \r\n\t\t\t\tonPress={handleSubmit} \r\n\t\t\t> \r\n\t\t\t\t<Text style={styles.buttonText}>Submit</Text> \r\n\t\t\t</TouchableOpacity> \r\n\t\t\t\r\n\t\t\t{/* Display error messages */} \r\n\t\t\t{Object.values(errors).map((error, index) => ( \r\n\t\t\t\t<Text key={index} style={styles.error}> \r\n\t\t\t\t\t{error} \r\n\t\t\t\t</Text> \r\n\t\t\t))} \r\n\t\t</View> \r\n\t); \r\n}; \r\n\r\n// Styles for the components \r\nconst styles = StyleSheet.create({ \r\n\tcontainer: { \r\n\t\tflex: 1, \r\n\t\tpadding: 16, \r\n\t\tjustifyContent: 'center', \r\n\t}, \r\n\tinput: { \r\n\t\theight: 60, \r\n\t\tborderColor: '#ccc', \r\n\t\tborderWidth: 1, \r\n\t\tmarginBottom: 12, \r\n\t\tpaddingHorizontal: 10, \r\n\t\tborderRadius: 8, \r\n\t\tfontSize: 16, \r\n\t}, \r\n\tbutton: { \r\n\t\tbackgroundColor: 'green', \r\n\t\tborderRadius: 8, \r\n\t\tpaddingVertical: 10, \r\n\t\talignItems: 'center', \r\n\t\tmarginTop: 16, \r\n\t\tmarginBottom: 12, \r\n\t}, \r\n\tbuttonText: { \r\n\t\tcolor: '#fff', \r\n\t\tfontWeight: 'bold', \r\n\t\tfontSize: 16, \r\n\t}, \r\n\terror: { \r\n\t\tcolor: 'red', \r\n\t\tfontSize: 20, \r\n\t\tmarginBottom: 12, \r\n\t}, \r\n}); \r\n\r\nexport default F;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}