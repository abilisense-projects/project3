{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginComp() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    rememberMe = _useState6[0],\n    setRememberMe = _useState6[1];\n  var handleLogin = function handleLogin() {\n    console.log(\"Username:\", username);\n    console.log(\"Password:\", password);\n    console.log(\"Remember Me:\", rememberMe);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"LoginCompComp Comp\"\n    }), _jsx(Text, {\n      children: \"Username or primary email\"\n    }), _jsx(TextInput, {\n      value: username,\n      onChangeText: setUsername,\n      placeholder: \"Enter your username\"\n    }), _jsx(Text, {\n      children: \"Password\"\n    }), _jsx(TextInput, {\n      value: password,\n      onChangeText: setPassword,\n      placeholder: \"Enter your password\",\n      secureTextEntry: true\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\"\n      },\n      children: [_jsx(CheckBox, {\n        value: rememberMe,\n        onValueChange: setRememberMe\n      }), _jsx(Text, {\n        children: \"Remember me\"\n      })]\n    }), _jsx(TouchableOpacity, {\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        children: \"Login\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","CheckBox","jsx","_jsx","jsxs","_jsxs","LoginComp","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","rememberMe","setRememberMe","handleLogin","console","log","children","value","onChangeText","placeholder","secureTextEntry","style","flexDirection","alignItems","onValueChange","onPress"],"sources":["C:/abilisense/project3/autisem-translator/client/components/register/loginComp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  CheckBox,\r\n} from \"react-native\";\r\n\r\nexport default function LoginComp() {\r\n  // const [isChecked, setChecked] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n\r\n  const handleLogin = () => {\r\n    // Add your login logic here\r\n    console.log(\"Username:\", username);\r\n    console.log(\"Password:\", password);\r\n    console.log(\"Remember Me:\", rememberMe);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Text>LoginCompComp Comp</Text>\r\n\r\n      <Text>Username or primary email</Text>\r\n      <TextInput\r\n        value={username}\r\n        onChangeText={setUsername}\r\n        placeholder=\"Enter your username\"\r\n      />\r\n\r\n      <Text>Password</Text>\r\n      <TextInput\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        placeholder=\"Enter your password\"\r\n        secureTextEntry\r\n      />\r\n\r\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n        <CheckBox value={rememberMe} onValueChange={setRememberMe} />\r\n        <Text>Remember me</Text>\r\n      </View>\r\n\r\n      <TouchableOpacity onPress={handleLogin}>\r\n        <Text>Login</Text>\r\n      </TouchableOpacity>\r\n\r\n      {/* <Button>Forgot your password?</Button> */}\r\n\r\n      {/* <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n      <CheckBox\r\n        value={isChecked}\r\n        onValueChange={setChecked}\r\n        style={{ marginVertical: 10 }}\r\n        // style={styles.checkbox}\r\n        // color={isChecked ? '#4630EB' : undefined}\r\n      />\r\n      <Text style={{ marginLeft: 8 }}>Remember me</Text>\r\n    </View> */}\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,QAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AASxC,eAAe,SAASC,SAASA,CAAA,EAAG;EAElC,IAAAC,SAAA,GAAgCX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAgChB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAAoCpB,QAAQ,CAAC,KAAK,CAAC;IAAAqB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA5CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAEhC,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IAExBC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEZ,QAAQ,CAAC;IAClCW,OAAO,CAACC,GAAG,CAAC,WAAW,EAAER,QAAQ,CAAC;IAClCO,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEJ,UAAU,CAAC;EACzC,CAAC;EAED,OACEb,KAAA,CAACR,IAAI;IAAA0B,QAAA,GACHpB,IAAA,CAACL,IAAI;MAAAyB,QAAA,EAAC;IAAkB,CAAM,CAAC,EAE/BpB,IAAA,CAACL,IAAI;MAAAyB,QAAA,EAAC;IAAyB,CAAM,CAAC,EACtCpB,IAAA,CAACJ,SAAS;MACRyB,KAAK,EAAEd,QAAS;MAChBe,YAAY,EAAEd,WAAY;MAC1Be,WAAW,EAAC;IAAqB,CAClC,CAAC,EAEFvB,IAAA,CAACL,IAAI;MAAAyB,QAAA,EAAC;IAAQ,CAAM,CAAC,EACrBpB,IAAA,CAACJ,SAAS;MACRyB,KAAK,EAAEV,QAAS;MAChBW,YAAY,EAAEV,WAAY;MAC1BW,WAAW,EAAC,qBAAqB;MACjCC,eAAe;IAAA,CAChB,CAAC,EAEFtB,KAAA,CAACR,IAAI;MAAC+B,KAAK,EAAE;QAAEC,aAAa,EAAE,KAAK;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAP,QAAA,GAC1DpB,IAAA,CAACF,QAAQ;QAACuB,KAAK,EAAEN,UAAW;QAACa,aAAa,EAAEZ;MAAc,CAAE,CAAC,EAC7DhB,IAAA,CAACL,IAAI;QAAAyB,QAAA,EAAC;MAAW,CAAM,CAAC;IAAA,CACpB,CAAC,EAEPpB,IAAA,CAACH,gBAAgB;MAACgC,OAAO,EAAEZ,WAAY;MAAAG,QAAA,EACrCpB,IAAA,CAACL,IAAI;QAAAyB,QAAA,EAAC;MAAK,CAAM;IAAC,CACF,CAAC;EAAA,CAcf,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}