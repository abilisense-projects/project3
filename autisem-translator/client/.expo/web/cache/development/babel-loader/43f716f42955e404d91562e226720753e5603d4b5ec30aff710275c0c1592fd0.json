{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AudioRecorderPlayer from 'react-native-audio-recorder-player';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar audioRecorderPlayer = new AudioRecorderPlayer();\nvar Recorder = function Recorder() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isRecording = _useState2[0],\n    setIsRecording = _useState2[1];\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      if (Platform.OS === 'android') {\n        var hasPermissionWrite = yield PermissionsAndroid.check(PermissionsAndroid.PERMISSIONS.WRITE_EXTERNAL_STORAGE);\n        var hasPermissionRecord = yield PermissionsAndroid.check(PermissionsAndroid.PERMISSIONS.RECORD_AUDIO);\n        if (hasPermissionRecord && hasPermissionWrite) {\n          setAndroidGranted(true);\n        } else {\n          setAndroidGranted(false);\n        }\n      } else {\n        setAndroidGranted(true);\n      }\n    })();\n  }, []);\n  var startRecording = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!androidGranted) {\n        if (Platform.OS === 'android') {\n          var granted = yield PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.RECORD_AUDIO);\n          if (granted !== PermissionsAndroid.RESULTS.GRANTED) {\n            ToastAndroid.show('Использование микрофона запрещена', ToastAndroid.LONG);\n            return false;\n          }\n        }\n        if (Platform.OS === 'android') {\n          var _granted = yield PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.WRITE_EXTERNAL_STORAGE);\n          if (_granted !== PermissionsAndroid.RESULTS.GRANTED) {\n            ToastAndroid.show('Запись в хранилише запрещено', ToastAndroid.LONG);\n            return false;\n          }\n        }\n        setAndroidGranted(true);\n      } else {\n        var path = Platform.select({\n          ios: 'akkerman_voice_message.m4a',\n          android: 'sdcard/akkerman_voice_message.mp4'\n        });\n        var audioSet = {\n          AudioEncoderAndroid: AudioEncoderAndroidType.AAC,\n          AudioSourceAndroid: AudioSourceAndroidType.MIC,\n          AVEncoderAudioQualityKeyIOS: AVEncoderAudioQualityIOSType.high,\n          AVNumberOfChannelsKeyIOS: 2,\n          AVFormatIDKeyIOS: AVEncodingOption.aac\n        };\n        yield store.audioRecorderPlayer.startRecorder(path, audioSet);\n        store.setIsRecording(true);\n        store.audioRecorderPlayer.addRecordBackListener(function (e) {\n          setRecordTime(store.audioRecorderPlayer.mmssss(Math.floor(e.current_position)));\n          if (e.current_position > MAX_AUDIO_DURATION) {\n            onStopRecord(0);\n          }\n          return;\n        });\n      }\n      return;\n    });\n    return function startRecording() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var stopRecording = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      if (isRecording) {\n        try {\n          yield audioRecorderPlayer.stopRecorder();\n          setIsRecording(false);\n        } catch (error) {\n          console.error('Error stopping recording:', error);\n        }\n      }\n    });\n    return function stopRecording() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: {\n      alignItems: 'center',\n      marginTop: 20\n    },\n    children: _jsx(TouchableOpacity, {\n      onPress: isRecording ? stopRecording : startRecording,\n      style: {\n        width: 80,\n        height: 80,\n        borderRadius: 40,\n        backgroundColor: isRecording ? 'red' : 'green',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(Text, {\n        style: {\n          color: 'white',\n          fontSize: 16\n        },\n        children: isRecording ? 'Stop' : 'Record'\n      })\n    })\n  });\n};\nexport default Recorder;","map":{"version":3,"names":["React","useState","useEffect","View","TouchableOpacity","Text","AudioRecorderPlayer","jsx","_jsx","audioRecorderPlayer","Recorder","_useState","_useState2","_slicedToArray","isRecording","setIsRecording","_asyncToGenerator","Platform","OS","hasPermissionWrite","PermissionsAndroid","check","PERMISSIONS","WRITE_EXTERNAL_STORAGE","hasPermissionRecord","RECORD_AUDIO","setAndroidGranted","startRecording","_ref2","androidGranted","granted","request","RESULTS","GRANTED","ToastAndroid","show","LONG","path","select","ios","android","audioSet","AudioEncoderAndroid","AudioEncoderAndroidType","AAC","AudioSourceAndroid","AudioSourceAndroidType","MIC","AVEncoderAudioQualityKeyIOS","AVEncoderAudioQualityIOSType","high","AVNumberOfChannelsKeyIOS","AVFormatIDKeyIOS","AVEncodingOption","aac","store","startRecorder","addRecordBackListener","e","setRecordTime","mmssss","Math","floor","current_position","MAX_AUDIO_DURATION","onStopRecord","apply","arguments","stopRecording","_ref3","stopRecorder","error","console","style","alignItems","marginTop","children","onPress","width","height","borderRadius","backgroundColor","justifyContent","color","fontSize"],"sources":["C:/Users/h0533/Desktop/project3/autisem-translator/client/components/recording/recording.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text } from 'react-native';\r\nimport AudioRecorderPlayer from 'react-native-audio-recorder-player';\r\n\r\nconst audioRecorderPlayer = new AudioRecorderPlayer();\r\n\r\nconst Recorder = () => {\r\n    const [isRecording, setIsRecording] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (Platform.OS === 'android') {\r\n                const hasPermissionWrite = await PermissionsAndroid.check(PermissionsAndroid.PERMISSIONS.WRITE_EXTERNAL_STORAGE);\r\n                const hasPermissionRecord = await PermissionsAndroid.check(PermissionsAndroid.PERMISSIONS.RECORD_AUDIO);\r\n\r\n                if (hasPermissionRecord && hasPermissionWrite) {\r\n                    setAndroidGranted(true);\r\n                } else {\r\n                    setAndroidGranted(false);\r\n                }\r\n            } else {\r\n                setAndroidGranted(true);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n\r\n    const startRecording = async () => {\r\n        if (!androidGranted) {\r\n          if (Platform.OS === 'android') {\r\n            const granted = await PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.RECORD_AUDIO);\r\n     \r\n            if (granted !== PermissionsAndroid.RESULTS.GRANTED) {\r\n              ToastAndroid.show('Использование микрофона запрещена', ToastAndroid.LONG);\r\n              return false;\r\n            }\r\n          }\r\n     \r\n          if (Platform.OS === 'android') {\r\n            const granted = await PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.WRITE_EXTERNAL_STORAGE);\r\n     \r\n            if (granted !== PermissionsAndroid.RESULTS.GRANTED) {\r\n              ToastAndroid.show('Запись в хранилише запрещено', ToastAndroid.LONG);\r\n              return false;\r\n            }\r\n          }\r\n     \r\n          setAndroidGranted(true);\r\n        } else {\r\n          const path = Platform.select({\r\n            ios: 'akkerman_voice_message.m4a',\r\n            android: 'sdcard/akkerman_voice_message.mp4',\r\n          });\r\n     \r\n          const audioSet: AudioSet = {\r\n            AudioEncoderAndroid: AudioEncoderAndroidType.AAC,\r\n            AudioSourceAndroid: AudioSourceAndroidType.MIC,\r\n            AVEncoderAudioQualityKeyIOS: AVEncoderAudioQualityIOSType.high,\r\n            AVNumberOfChannelsKeyIOS: 2,\r\n            AVFormatIDKeyIOS: AVEncodingOption.aac,\r\n          };\r\n     \r\n          await store.audioRecorderPlayer.startRecorder(path, audioSet);\r\n     \r\n          store.setIsRecording(true);\r\n          store.audioRecorderPlayer.addRecordBackListener((e: any) => {\r\n            setRecordTime(store.audioRecorderPlayer.mmssss(Math.floor(e.current_position)));\r\n     \r\n            // Stop and save recording\r\n            if (e.current_position > MAX_AUDIO_DURATION) {\r\n              onStopRecord(0);\r\n            }\r\n     \r\n            return;\r\n          });\r\n        }\r\n     \r\n        return;\r\n      };\r\n    \r\n    const stopRecording = async () => {\r\n        if (isRecording) {\r\n            try {\r\n                await audioRecorderPlayer.stopRecorder();\r\n                setIsRecording(false);\r\n            } catch (error) {\r\n                console.error('Error stopping recording:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={{ alignItems: 'center', marginTop: 20 }}>\r\n            <TouchableOpacity\r\n                onPress={isRecording ? stopRecording : startRecording}\r\n                style={{\r\n                    width: 80,\r\n                    height: 80,\r\n                    borderRadius: 40,\r\n                    backgroundColor: isRecording ? 'red' : 'green',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                <Text style={{ color: 'white', fontSize: 16 }}>\r\n                    {isRecording ? 'Stop' : 'Record'}\r\n                </Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Recorder;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}