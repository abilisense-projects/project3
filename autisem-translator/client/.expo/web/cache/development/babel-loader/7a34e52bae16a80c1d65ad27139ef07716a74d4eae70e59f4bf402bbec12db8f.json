{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { openComposer } from 'react-native-email-link';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar SendEmail = function SendEmail() {\n  var handleEmailPress = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var to = ['recipient@example.com'];\n      var subject = 'Password Reset';\n      var body = 'Please reset my password.';\n      try {\n        yield openComposer({\n          to: to,\n          subject: subject,\n          body: body\n        });\n      } catch (error) {\n        console.error('Error opening email client:', error);\n      }\n    });\n    return function handleEmailPress() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    children: _jsx(TouchableOpacity, {\n      onPress: handleEmailPress,\n      children: _jsx(Text, {\n        children: \"Send Email\"\n      })\n    })\n  });\n};\nexport default SendEmail;","map":{"version":3,"names":["React","View","TouchableOpacity","Text","openComposer","jsx","_jsx","SendEmail","handleEmailPress","_ref","_asyncToGenerator","to","subject","body","error","console","apply","arguments","children","onPress"],"sources":["C:/abilisense/project3/autisem-translator/client/components/login/sendEmailComp.js"],"sourcesContent":["import React from 'react';\r\nimport { View, TouchableOpacity, Text } from 'react-native';\r\nimport { openComposer } from 'react-native-email-link';\r\n\r\n\r\n\r\nconst SendEmail = () => {\r\n  const handleEmailPress = async () => {\r\n    const to = ['recipient@example.com']; // Replace with your email address\r\n    const subject = 'Password Reset'; // Customize the subject\r\n    const body = 'Please reset my password.'; // Customize the body\r\n\r\n    try {\r\n      await openComposer({\r\n        to,\r\n        subject,\r\n        body,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error opening email client:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TouchableOpacity onPress={handleEmailPress}>\r\n        <Text>Send Email</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SendEmail;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAE1B,SAASC,YAAY,QAAQ,yBAAyB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAIvD,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EACtB,IAAMC,gBAAgB;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MACnC,IAAMC,EAAE,GAAG,CAAC,uBAAuB,CAAC;MACpC,IAAMC,OAAO,GAAG,gBAAgB;MAChC,IAAMC,IAAI,GAAG,2BAA2B;MAExC,IAAI;QACF,MAAMT,YAAY,CAAC;UACjBO,EAAE,EAAFA,EAAE;UACFC,OAAO,EAAPA,OAAO;UACPC,IAAI,EAAJA;QACF,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAAA,gBAdKN,gBAAgBA,CAAA;MAAA,OAAAC,IAAA,CAAAO,KAAA,OAAAC,SAAA;IAAA;EAAA,GAcrB;EAED,OACEX,IAAA,CAACL,IAAI;IAAAiB,QAAA,EACHZ,IAAA,CAACJ,gBAAgB;MAACiB,OAAO,EAAEX,gBAAiB;MAAAU,QAAA,EAC1CZ,IAAA,CAACH,IAAI;QAAAe,QAAA,EAAC;MAAU,CAAM;IAAC,CACP;EAAC,CACf,CAAC;AAEX,CAAC;AAED,eAAeX,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}