{"ast":null,"code":"'use strict';\n\nimport Appearance from \"./Appearance\";\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nexport default function useColorScheme() {\n  return useSyncExternalStore(function (callback) {\n    var appearanceSubscription = Appearance.addChangeListener(callback);\n    return function () {\n      return appearanceSubscription.remove();\n    };\n  }, function () {\n    return Appearance.getColorScheme();\n  });\n}","map":{"version":3,"names":["Appearance","useSyncExternalStore","useColorScheme","callback","appearanceSubscription","addChangeListener","remove","getColorScheme"],"sources":["C:/abilisense/project3/autisem-translator/client/node_modules/react-native/Libraries/Utilities/useColorScheme.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {ColorSchemeName} from './NativeAppearance';\n\nimport Appearance from './Appearance';\nimport {useSyncExternalStore} from 'use-sync-external-store/shim';\n\nexport default function useColorScheme(): ?ColorSchemeName {\n  return useSyncExternalStore(\n    callback => {\n      const appearanceSubscription = Appearance.addChangeListener(callback);\n      return () => appearanceSubscription.remove();\n    },\n    () => Appearance.getColorScheme(),\n  );\n}\n"],"mappings":"AAUA,YAAY;;AAIZ,OAAOA,UAAU;AACjB,SAAQC,oBAAoB,QAAO,8BAA8B;AAEjE,eAAe,SAASC,cAAcA,CAAA,EAAqB;EACzD,OAAOD,oBAAoB,CACzB,UAAAE,QAAQ,EAAI;IACV,IAAMC,sBAAsB,GAAGJ,UAAU,CAACK,iBAAiB,CAACF,QAAQ,CAAC;IACrE,OAAO;MAAA,OAAMC,sBAAsB,CAACE,MAAM,CAAC,CAAC;IAAA;EAC9C,CAAC,EACD;IAAA,OAAMN,UAAU,CAACO,cAAc,CAAC,CAAC;EAAA,CACnC,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}