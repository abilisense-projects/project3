{"ast":null,"code":"import React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport GenericForm from \"../shared/form\";\nimport validations from \"../shared/validations\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar fields = [{\n  name: 'User Name',\n  state: 'username',\n  placeholder: 'Enter your email',\n  type: 'text',\n  rules: validations.email\n}, {\n  name: 'Password',\n  state: 'password',\n  placeholder: 'Enter your password',\n  type: 'text',\n  secureTextEntry: true,\n  rules: validations.password\n}];\nexport default function Login() {\n  var navigation = useNavigation();\n  var onSubmit = function onSubmit(data) {\n    console.log('Form data:', data);\n  };\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\"\n      },\n      children: [_jsx(CheckBox, {\n        value: rememberMe,\n        onValueChange: setRememberMe\n      }), _jsx(Text, {\n        style: {\n          marginLeft: 8\n        },\n        children: \"Remember me\"\n      })]\n    }), _jsx(Pressable, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Forgot your password\");\n      },\n      children: _jsx(Text, {\n        style: {\n          color: \"red\"\n        },\n        children: \"Forgot your password?\"\n      })\n    }), _jsx(GenericForm, {\n      fields: fields,\n      onSubmit: onSubmit,\n      submitButton: \"Login\"\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","TextInput","Pressable","CheckBox","useNavigation","GenericForm","validations","jsx","_jsx","jsxs","_jsxs","fields","name","state","placeholder","type","rules","email","secureTextEntry","password","Login","navigation","onSubmit","data","console","log","children","style","flexDirection","alignItems","value","rememberMe","onValueChange","setRememberMe","marginLeft","onPress","navigate","color","submitButton"],"sources":["C:/abilisense/project3/autisem-translator/client/components/login/login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, TextInput, Pressable, CheckBox } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport GenericForm from '../shared/form';\r\nimport validations from '../shared/validations';\r\n\r\nconst fields = [\r\n  { name: 'User Name', state: 'username', placeholder: 'Enter your email',type: 'text',rules: validations.email},\r\n  { name: 'Password', state: 'password', placeholder: 'Enter your password',type: 'text', secureTextEntry: true ,rules: validations.password },\r\n];\r\n\r\nexport default function Login() {\r\n  const navigation = useNavigation();\r\n\r\n  // const [rememberMe, setRememberMe] = useState(false);\r\n\r\n  const onSubmit = (data) => {\r\n    //clear form?\r\n    //Handle form submission logic\r\n    //save the data in db\r\n    //did all data go through validations / wran user\r\n    //save data / send to server\r\n    console.log('Form data:', data);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n        <CheckBox value={rememberMe} onValueChange={setRememberMe} />\r\n        <Text style={{ marginLeft: 8 }}>Remember me</Text>\r\n      </View>\r\n\r\n      <Pressable onPress={() => navigation.navigate(\"Forgot your password\")}>\r\n        <Text style={{ color: \"red\" }}>Forgot your password?</Text>\r\n      </Pressable>\r\n\r\n      <GenericForm fields={fields} onSubmit={onSubmit} submitButton=\"Login\"></GenericForm>\r\n\r\n     \r\n\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,QAAA;AAExC,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,WAAW;AAClB,OAAOC,WAAW;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhD,IAAMC,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,WAAW;EAAEC,KAAK,EAAE,UAAU;EAAEC,WAAW,EAAE,kBAAkB;EAACC,IAAI,EAAE,MAAM;EAACC,KAAK,EAAEV,WAAW,CAACW;AAAK,CAAC,EAC9G;EAAEL,IAAI,EAAE,UAAU;EAAEC,KAAK,EAAE,UAAU;EAAEC,WAAW,EAAE,qBAAqB;EAACC,IAAI,EAAE,MAAM;EAAEG,eAAe,EAAE,IAAI;EAAEF,KAAK,EAAEV,WAAW,CAACa;AAAS,CAAC,CAC7I;AAED,eAAe,SAASC,KAAKA,CAAA,EAAG;EAC9B,IAAMC,UAAU,GAAGjB,aAAa,CAAC,CAAC;EAIlC,IAAMkB,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,IAAI,EAAK;IAMzBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,IAAI,CAAC;EACjC,CAAC;EAED,OACEb,KAAA,CAACX,IAAI;IAAA2B,QAAA,GACHhB,KAAA,CAACX,IAAI;MAAC4B,KAAK,EAAE;QAAEC,aAAa,EAAE,KAAK;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAH,QAAA,GAC1DlB,IAAA,CAACL,QAAQ;QAAC2B,KAAK,EAAEC,UAAW;QAACC,aAAa,EAAEC;MAAc,CAAE,CAAC,EAC7DzB,IAAA,CAACR,IAAI;QAAC2B,KAAK,EAAE;UAAEO,UAAU,EAAE;QAAE,CAAE;QAAAR,QAAA,EAAC;MAAW,CAAM,CAAC;IAAA,CAC9C,CAAC,EAEPlB,IAAA,CAACN,SAAS;MAACiC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMd,UAAU,CAACe,QAAQ,CAAC,sBAAsB,CAAC;MAAA,CAAC;MAAAV,QAAA,EACpElB,IAAA,CAACR,IAAI;QAAC2B,KAAK,EAAE;UAAEU,KAAK,EAAE;QAAM,CAAE;QAAAX,QAAA,EAAC;MAAqB,CAAM;IAAC,CAClD,CAAC,EAEZlB,IAAA,CAACH,WAAW;MAACM,MAAM,EAAEA,MAAO;MAACW,QAAQ,EAAEA,QAAS;MAACgB,YAAY,EAAC;IAAO,CAAc,CAAC;EAAA,CAIhF,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}