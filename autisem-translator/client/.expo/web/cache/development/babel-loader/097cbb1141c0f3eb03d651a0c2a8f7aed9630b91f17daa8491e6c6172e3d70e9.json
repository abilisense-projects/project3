{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar F = function F() {\n  var _useForm = useForm(),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    setValue = _useForm.setValue,\n    errors = _useForm.formState.errors;\n  var onSubmit = function onSubmit(data) {\n    console.log('Form submitted successfully!', data);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Controller, {\n      control: control,\n      render: function render(_ref) {\n        var field = _ref.field;\n        return _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Name\",\n          value: field.value,\n          onChangeText: function onChangeText(text) {\n            return setValue('name', text);\n          }\n        });\n      },\n      name: \"name\",\n      rules: {\n        required: 'Name is required.'\n      },\n      defaultValue: \"\"\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref2) {\n        var field = _ref2.field;\n        return _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Email\",\n          value: field.value,\n          onChangeText: function onChangeText(text) {\n            return setValue('email', text);\n          }\n        });\n      },\n      name: \"email\",\n      rules: {\n        required: 'Email is required.',\n        pattern: {\n          value: /\\S+@\\S+\\.\\S+/,\n          message: 'Email is invalid.'\n        }\n      },\n      defaultValue: \"\"\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref3) {\n        var field = _ref3.field;\n        return _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Password\",\n          value: field.value,\n          onChangeText: function onChangeText(text) {\n            return setValue('password', text);\n          },\n          secureTextEntry: true\n        });\n      },\n      name: \"password\",\n      rules: {\n        required: 'Password is required.',\n        minLength: {\n          value: 6,\n          message: 'Password must be at least 6 characters.'\n        }\n      },\n      defaultValue: \"\"\n    }), _jsx(TouchableOpacity, {\n      style: [styles.button, {\n        opacity: Object.keys(errors).length === 0 ? 1 : 0.5\n      }],\n      disabled: Object.keys(errors).length > 0,\n      onPress: handleSubmit(onSubmit),\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Submit\"\n      })\n    }), Object.values(errors).map(function (error, index) {\n      return _jsx(Text, {\n        style: styles.error,\n        children: error.message\n      }, index);\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    justifyContent: 'center'\n  },\n  input: {\n    height: 60,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    marginBottom: 12,\n    paddingHorizontal: 10,\n    borderRadius: 8,\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: 'green',\n    borderRadius: 8,\n    paddingVertical: 10,\n    alignItems: 'center',\n    marginTop: 16,\n    marginBottom: 12\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  error: {\n    color: 'red',\n    fontSize: 20,\n    marginBottom: 12\n  }\n});\nexport default F;","map":{"version":3,"names":["React","View","TextInput","TouchableOpacity","Text","StyleSheet","useForm","Controller","jsx","_jsx","jsxs","_jsxs","F","_useForm","control","handleSubmit","setValue","errors","formState","onSubmit","data","console","log","style","styles","container","children","render","_ref","field","input","placeholder","value","onChangeText","text","name","rules","required","defaultValue","_ref2","pattern","message","_ref3","secureTextEntry","minLength","button","opacity","Object","keys","length","disabled","onPress","buttonText","values","map","error","index","create","flex","padding","justifyContent","height","borderColor","borderWidth","marginBottom","paddingHorizontal","borderRadius","fontSize","backgroundColor","paddingVertical","alignItems","marginTop","color","fontWeight"],"sources":["C:/Users/malky/Desktop/project3/autisem-translator/client/components/register/f.js"],"sourcesContent":["import React from 'react';\r\nimport { View, TextInput, TouchableOpacity, Text, StyleSheet } from 'react-native';\r\nimport { useForm, Controller } from 'react-hook-form';\r\n\r\nconst F = () => {\r\n  const { control, handleSubmit, setValue, formState: { errors } } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    // Perform the submission logic\r\n    console.log('Form submitted successfully!', data);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Controller\r\n        control={control}\r\n        render={({ field }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Name\"\r\n            value={field.value}\r\n            onChangeText={(text) => setValue('name', text)}\r\n          />\r\n        )}\r\n        name=\"name\"\r\n        rules={{ required: 'Name is required.' }}\r\n        defaultValue=\"\"\r\n      />\r\n\r\n      <Controller\r\n        control={control}\r\n        render={({ field }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Email\"\r\n            value={field.value}\r\n            onChangeText={(text) => setValue('email', text)}\r\n          />\r\n        )}\r\n        name=\"email\"\r\n        rules={{ required: 'Email is required.', pattern: { value: /\\S+@\\S+\\.\\S+/, message: 'Email is invalid.' } }}\r\n        defaultValue=\"\"\r\n      />\r\n\r\n      <Controller\r\n        control={control}\r\n        render={({ field }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Password\"\r\n            value={field.value}\r\n            onChangeText={(text) => setValue('password', text)}\r\n            secureTextEntry\r\n          />\r\n        )}\r\n        name=\"password\"\r\n        rules={{ required: 'Password is required.', minLength: { value: 6, message: 'Password must be at least 6 characters.' } }}\r\n        defaultValue=\"\"\r\n      />\r\n\r\n      <TouchableOpacity\r\n        style={[styles.button, { opacity: Object.keys(errors).length === 0 ? 1 : 0.5 }]}\r\n        disabled={Object.keys(errors).length > 0}\r\n        onPress={handleSubmit(onSubmit)}\r\n      >\r\n        <Text style={styles.buttonText}>Submit</Text>\r\n      </TouchableOpacity>\r\n\r\n      {/* Display error messages */}\r\n      {Object.values(errors).map((error, index) => (\r\n        <Text key={index} style={styles.error}>\r\n          {error.message}\r\n        </Text>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\n// Styles for the components\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    justifyContent: 'center',\r\n  },\r\n  input: {\r\n    height: 60,\r\n    borderColor: '#ccc',\r\n    borderWidth: 1,\r\n    marginBottom: 12,\r\n    paddingHorizontal: 10,\r\n    borderRadius: 8,\r\n    fontSize: 16,\r\n  },\r\n  button: {\r\n    backgroundColor: 'green',\r\n    borderRadius: 8,\r\n    paddingVertical: 10,\r\n    alignItems: 'center',\r\n    marginTop: 16,\r\n    marginBottom: 12,\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 20,\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default F;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}