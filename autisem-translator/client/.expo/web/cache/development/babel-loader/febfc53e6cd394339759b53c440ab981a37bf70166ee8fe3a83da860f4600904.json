{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Form from \"../shared/form\";\nimport GenericForm from \"./form\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar userTypeOptions = [{\n  name: 'Select User Type',\n  value: ''\n}, {\n  name: 'Therapist',\n  value: 'therapist'\n}, {\n  name: 'Treated',\n  value: 'treated'\n}];\nvar fields = [{\n  name: 'User Name',\n  state: 'username',\n  placeholder: 'Enter your email',\n  type: 'text',\n  rules: {\n    required: 'Email is required.',\n    pattern: {\n      value: /\\S+@\\S+\\.\\S+/,\n      message: 'Email is invalid.'\n    }\n  }\n}, {\n  name: 'First Name',\n  state: 'firstName',\n  placeholder: 'Enter your firstName',\n  type: 'text',\n  rules: {\n    required: 'First Name is required.'\n  }\n}, {\n  name: 'Last Name',\n  state: 'lastName',\n  placeholder: 'Enter your lastName',\n  type: 'text',\n  rules: {\n    required: 'Last Name is required.'\n  }\n}, {\n  name: 'Phone Number',\n  state: 'phoneNumber',\n  placeholder: 'Enter your phoneNumber',\n  type: 'text',\n  rules: {\n    required: 'phoneNumber is required.'\n  }\n}, {\n  name: 'Password',\n  state: 'password',\n  placeholder: 'Enter your password',\n  type: 'text',\n  secureTextEntry: true,\n  rules: {\n    required: 'password is required.'\n  }\n}, {\n  name: 'Type',\n  state: 'type',\n  options: userTypeOptions,\n  type: 'picker',\n  rules: {\n    required: 'type is required.'\n  }\n}];\nexport default function RegistrationForm() {\n  var onSubmit = function onSubmit(data) {\n    console.log('Form data:', data);\n  };\n  return _jsx(View, {\n    children: _jsx(GenericForm, {\n      fields: fields,\n      onSubmit: onSubmit,\n      submitB: true\n    })\n  });\n}","map":{"version":3,"names":["React","View","Form","GenericForm","jsx","_jsx","userTypeOptions","name","value","fields","state","placeholder","type","rules","required","pattern","message","secureTextEntry","options","RegistrationForm","onSubmit","data","console","log","children","submitB"],"sources":["C:/Users/malky/Desktop/project3/autisem-translator/client/components/register/registerForm.js"],"sourcesContent":["import React from 'react';\r\nimport { View } from 'react-native';\r\nimport Form from '../shared/form';\r\nimport GenericForm from './form';\r\n\r\nconst userTypeOptions = [\r\n  { name: 'Select User Type', value: '' },\r\n  { name: 'Therapist', value: 'therapist' },\r\n  { name: 'Treated', value: 'treated' },\r\n];\r\n\r\nconst fields = [\r\n  { name: 'User Name', state: 'username', placeholder: 'Enter your email',type: 'text',rules: { required: 'Email is required.', pattern: { value: /\\S+@\\S+\\.\\S+/, message: 'Email is invalid.' } } },\r\n  { name: 'First Name', state: 'firstName', placeholder: 'Enter your firstName',type: 'text' ,rules: { required: 'First Name is required.'} },\r\n  { name: 'Last Name', state: 'lastName', placeholder: 'Enter your lastName',type: 'text' ,rules: { required: 'Last Name is required.'} },\r\n  { name: 'Phone Number', state: 'phoneNumber', placeholder: 'Enter your phoneNumber',type: 'text' ,rules: { required: 'phoneNumber is required.'} },\r\n  { name: 'Password', state: 'password', placeholder: 'Enter your password',type: 'text', secureTextEntry: true ,rules: { required: 'password is required.'} },\r\n  { name: 'Type', state: 'type', options: userTypeOptions,type: 'picker', rules: { required: 'type is required.'} },\r\n];\r\n\r\n\r\n\r\nexport default function RegistrationForm() {\r\n  const onSubmit = (data) => {\r\n    // Handle form submission logic\r\n    //save the data in db\r\n    console.log('Form data:', data);\r\n  };\r\n  return (\r\n    <View>\r\n      {/* user userDetails should come back from the form (as an event?)\r\n    check if fields & userTypeOptions are not null */}\r\n      {/* <Form fields={fields} userTypeOptions={userTypeOptions} ></Form> */}\r\n      <GenericForm fields={fields} onSubmit={onSubmit} submitB></GenericForm>\r\n    </View>\r\n  );\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAE1B,OAAOC,IAAI;AACX,OAAOC,WAAW;AAAe,SAAAC,GAAA,IAAAC,IAAA;AAEjC,IAAMC,eAAe,GAAG,CACtB;EAAEC,IAAI,EAAE,kBAAkB;EAAEC,KAAK,EAAE;AAAG,CAAC,EACvC;EAAED,IAAI,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAY,CAAC,EACzC;EAAED,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAU,CAAC,CACtC;AAED,IAAMC,MAAM,GAAG,CACb;EAAEF,IAAI,EAAE,WAAW;EAAEG,KAAK,EAAE,UAAU;EAAEC,WAAW,EAAE,kBAAkB;EAACC,IAAI,EAAE,MAAM;EAACC,KAAK,EAAE;IAAEC,QAAQ,EAAE,oBAAoB;IAAEC,OAAO,EAAE;MAAEP,KAAK,EAAE,cAAc;MAAEQ,OAAO,EAAE;IAAoB;EAAE;AAAE,CAAC,EAClM;EAAET,IAAI,EAAE,YAAY;EAAEG,KAAK,EAAE,WAAW;EAAEC,WAAW,EAAE,sBAAsB;EAACC,IAAI,EAAE,MAAM;EAAEC,KAAK,EAAE;IAAEC,QAAQ,EAAE;EAAyB;AAAE,CAAC,EAC3I;EAAEP,IAAI,EAAE,WAAW;EAAEG,KAAK,EAAE,UAAU;EAAEC,WAAW,EAAE,qBAAqB;EAACC,IAAI,EAAE,MAAM;EAAEC,KAAK,EAAE;IAAEC,QAAQ,EAAE;EAAwB;AAAE,CAAC,EACvI;EAAEP,IAAI,EAAE,cAAc;EAAEG,KAAK,EAAE,aAAa;EAAEC,WAAW,EAAE,wBAAwB;EAACC,IAAI,EAAE,MAAM;EAAEC,KAAK,EAAE;IAAEC,QAAQ,EAAE;EAA0B;AAAE,CAAC,EAClJ;EAAEP,IAAI,EAAE,UAAU;EAAEG,KAAK,EAAE,UAAU;EAAEC,WAAW,EAAE,qBAAqB;EAACC,IAAI,EAAE,MAAM;EAAEK,eAAe,EAAE,IAAI;EAAEJ,KAAK,EAAE;IAAEC,QAAQ,EAAE;EAAuB;AAAE,CAAC,EAC5J;EAAEP,IAAI,EAAE,MAAM;EAAEG,KAAK,EAAE,MAAM;EAAEQ,OAAO,EAAEZ,eAAe;EAACM,IAAI,EAAE,QAAQ;EAAEC,KAAK,EAAE;IAAEC,QAAQ,EAAE;EAAmB;AAAE,CAAC,CAClH;AAID,eAAe,SAASK,gBAAgBA,CAAA,EAAG;EACzC,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,IAAI,EAAK;IAGzBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,IAAI,CAAC;EACjC,CAAC;EACD,OACEhB,IAAA,CAACJ,IAAI;IAAAuB,QAAA,EAIHnB,IAAA,CAACF,WAAW;MAACM,MAAM,EAAEA,MAAO;MAACW,QAAQ,EAAEA,QAAS;MAACK,OAAO;IAAA,CAAc;EAAC,CACnE,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}