{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { openComposer } from 'react-native-email-link';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function SendEmail() {\n  var SendEmail = function SendEmail() {\n    var handleEmailPress = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var to = ['recipient@example.com'];\n        var subject = 'Password Reset';\n        var body = 'Please reset my password.';\n        try {\n          yield openComposer({\n            to: to,\n            subject: subject,\n            body: body\n          });\n        } catch (error) {\n          console.error('Error opening email client:', error);\n        }\n      });\n      return function handleEmailPress() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    return _jsx(View, {\n      children: _jsx(TouchableOpacity, {\n        onPress: handleEmailPress,\n        children: _jsx(Text, {\n          children: \"Send Email\"\n        })\n      })\n    });\n  };\n}","map":{"version":3,"names":["React","View","TouchableOpacity","Text","openComposer","jsx","_jsx","SendEmail","handleEmailPress","_ref","_asyncToGenerator","to","subject","body","error","console","apply","arguments","children","onPress"],"sources":["C:/abilisense/project3/autisem-translator/client/components/login/sendEmailComp.js"],"sourcesContent":["import React from 'react';\r\nimport { View, TouchableOpacity, Text } from 'react-native';\r\nimport { openComposer } from 'react-native-email-link';\r\n\r\n\r\nexport default function SendEmail() {\r\nconst SendEmail = () => {\r\n  const handleEmailPress = async () => {\r\n    const to = ['recipient@example.com']; // Replace with your email address\r\n    const subject = 'Password Reset'; // Customize the subject\r\n    const body = 'Please reset my password.'; // Customize the body\r\n\r\n    try {\r\n      await openComposer({\r\n        to,\r\n        subject,\r\n        body,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error opening email client:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TouchableOpacity onPress={handleEmailPress}>\r\n        <Text>Send Email</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAE1B,SAASC,YAAY,QAAQ,yBAAyB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAGvD,eAAe,SAASC,SAASA,CAAA,EAAG;EACpC,IAAMA,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;IACtB,IAAMC,gBAAgB;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QACnC,IAAMC,EAAE,GAAG,CAAC,uBAAuB,CAAC;QACpC,IAAMC,OAAO,GAAG,gBAAgB;QAChC,IAAMC,IAAI,GAAG,2BAA2B;QAExC,IAAI;UACF,MAAMT,YAAY,CAAC;YACjBO,EAAE,EAAFA,EAAE;YACFC,OAAO,EAAPA,OAAO;YACPC,IAAI,EAAJA;UACF,CAAC,CAAC;QACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACrD;MACF,CAAC;MAAA,gBAdKN,gBAAgBA,CAAA;QAAA,OAAAC,IAAA,CAAAO,KAAA,OAAAC,SAAA;MAAA;IAAA,GAcrB;IAED,OACEX,IAAA,CAACL,IAAI;MAAAiB,QAAA,EACHZ,IAAA,CAACJ,gBAAgB;QAACiB,OAAO,EAAEX,gBAAiB;QAAAU,QAAA,EAC1CZ,IAAA,CAACH,IAAI;UAAAe,QAAA,EAAC;QAAU,CAAM;MAAC,CACP;IAAC,CACf,CAAC;EAEX,CAAC;AAED"},"metadata":{},"sourceType":"module","externalDependencies":[]}