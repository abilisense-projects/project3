{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ForgotYourPasswordComp() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    useremail = _useState2[0],\n    setUseremail = _useState2[1];\n  var handleResetPassword = function handleResetPassword() {\n    console.log(\"Username:\", useremail);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Forgot your password Comp\"\n    }), _jsx(Text, {\n      children: \"Email\"\n    }), _jsx(TextInput, {\n      value: useremail,\n      onChangeText: setUseremail\n    }), _jsx(Button, {\n      children: \"Reset Password\"\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","Button","jsx","_jsx","jsxs","_jsxs","ForgotYourPasswordComp","_useState","_useState2","_slicedToArray","useremail","setUseremail","handleResetPassword","console","log","children","TextInput","value","onChangeText"],"sources":["C:/abilisense/project3/autisem-translator/client/components/register/forgotYourPasswordComp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, Button ,} from \"react-native\";\r\nexport default function ForgotYourPasswordComp() {\r\n  const [useremail, setUseremail] = useState(\"\");\r\n  const handleResetPassword = () => {\r\n    // Add your login logic here\r\n    console.log(\"Username:\", useremail);\r\n    \r\n  };\r\n  return (\r\n    <View>\r\n      <Text>Forgot your password Comp</Text>\r\n      <Text>Email</Text>\r\n      <TextInput\r\n        value={useremail}\r\n        onChangeText={setUseremail}\r\n        // placeholder=\"Enter your email\"\r\n      />\r\n      \r\n      <Button>Reset Password</Button>\r\n      {/* <TouchableOpacity onPress={handleResetPassword}>\r\n        <Text>Reset Password</Text>\r\n      </TouchableOpacity> */}\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAExC,eAAe,SAASC,sBAAsBA,CAAA,EAAG;EAC/C,IAAAC,SAAA,GAAkCT,QAAQ,CAAC,EAAE,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;IAEhCC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEJ,SAAS,CAAC;EAErC,CAAC;EACD,OACEL,KAAA,CAACN,IAAI;IAAAgB,QAAA,GACHZ,IAAA,CAACH,IAAI;MAAAe,QAAA,EAAC;IAAyB,CAAM,CAAC,EACtCZ,IAAA,CAACH,IAAI;MAAAe,QAAA,EAAC;IAAK,CAAM,CAAC,EAClBZ,IAAA,CAACa,SAAS;MACRC,KAAK,EAAEP,SAAU;MACjBQ,YAAY,EAAEP;IAAa,CAE5B,CAAC,EAEFR,IAAA,CAACF,MAAM;MAAAc,QAAA,EAAC;IAAc,CAAQ,CAAC;EAAA,CAI3B,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}