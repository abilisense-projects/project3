{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Input } from \"react-native-web/dist/index\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { CheckBox } from 'expo-checkbox';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isChecked = _useState2[0],\n    setChecked = _useState2[1];\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Login\"\n    }), _jsx(Text, {\n      children: \"Username or primary email\"\n    }), _jsx(Text, {\n      children: \"Password\"\n    }), _jsx(Text, {\n      children: \"Remember me\"\n    }), _jsx(View, {\n      children: _jsx(Checkbox, {\n        style: styles.checkbox,\n        value: isChecked,\n        onValueChange: setChecked,\n        color: isChecked ? '#4630EB' : undefined\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","Input","Button","CheckBox","jsx","_jsx","jsxs","_jsxs","Login","_useState","_useState2","_slicedToArray","isChecked","setChecked","children","Checkbox","style","styles","checkbox","value","onValueChange","color","undefined"],"sources":["C:/abilisense/project3/autisem-translator/client/pages/login.js"],"sourcesContent":["// import Checkbox from 'expo-checkbox';\r\nimport React , { useState } from \"react\";\r\nimport { View, Text, Input, Button } from \"react-native\";\r\nimport { CheckBox } from 'expo-checkbox';\r\nexport default function Login() {\r\n  const [isChecked, setChecked] = useState(false);\r\n  return (\r\n    <View>\r\n      <Text>Login</Text>\r\n      <Text>Username or primary email</Text>\r\n      {/* <Input></Input> */}\r\n      <Text>Password</Text>\r\n      {/* <Input></Input> */}\r\n      {/* <Button>Forgot your password?</Button> */}\r\n\r\n      <Text>Remember me</Text>\r\n      <View>\r\n      <Checkbox\r\n          style={styles.checkbox}\r\n          value={isChecked}\r\n          onValueChange={setChecked}\r\n          color={isChecked ? '#4630EB' : undefined}\r\n          // style={{ marginVertical: 10 }}\r\n        />\r\n      \r\n    </View>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";AACA,OAAOA,KAAK,IAAKC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,SACpBC,KAAK;AAAA,OAAAC,MAAA;AAC1B,SAASC,QAAQ,QAAQ,eAAe;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACzC,eAAe,SAASC,KAAKA,CAAA,EAAG;EAC9B,IAAAC,SAAA,GAAgCX,QAAQ,CAAC,KAAK,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxCG,SAAS,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC5B,OACEH,KAAA,CAACR,IAAI;IAAAe,QAAA,GACHT,IAAA,CAACL,IAAI;MAAAc,QAAA,EAAC;IAAK,CAAM,CAAC,EAClBT,IAAA,CAACL,IAAI;MAAAc,QAAA,EAAC;IAAyB,CAAM,CAAC,EAEtCT,IAAA,CAACL,IAAI;MAAAc,QAAA,EAAC;IAAQ,CAAM,CAAC,EAIrBT,IAAA,CAACL,IAAI;MAAAc,QAAA,EAAC;IAAW,CAAM,CAAC,EACxBT,IAAA,CAACN,IAAI;MAAAe,QAAA,EACLT,IAAA,CAACU,QAAQ;QACLC,KAAK,EAAEC,MAAM,CAACC,QAAS;QACvBC,KAAK,EAAEP,SAAU;QACjBQ,aAAa,EAAEP,UAAW;QAC1BQ,KAAK,EAAET,SAAS,GAAG,SAAS,GAAGU;MAAU,CAE1C;IAAC,CAEA,CAAC;EAAA,CACD,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}